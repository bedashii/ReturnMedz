

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Company : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Company entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Company()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Company(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Company> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Company.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CompanyName
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyName);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsActive
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsActive);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsActive, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comment
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Comment);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Comment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Stage
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Stage);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Stage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Industry
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Industry);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Industry, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Industry_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Industry_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Industry_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsInstallerElectrical
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerElectrical);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerElectrical, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerElectrical_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerElectrical_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerElectrical_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsInstallerWater
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerWater);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerWater, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerWater_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerWater_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerWater_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsInstallerGas
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerGas);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerGas, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerGas_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerGas_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerGas_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Priority
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Priority);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Priority, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Priority_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TaxNumber
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.TaxNumber);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.TaxNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaxNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaxNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TaxNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Tel
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Tel);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Tel, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tel_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tel_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tel_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Fax
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Website
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Website);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Website, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Website_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Website_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Website_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string email
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.email);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.email, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void email_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void email_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void email_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ParentCompany
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ParentCompany);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ParentCompany, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentCompany_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentCompany_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentCompany_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Rep
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Rep);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Rep, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rep_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rep_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rep_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Tags
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Tags);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Tags, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tags_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tags_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tags_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Contact Contact
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contact);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Sector Sector
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Sector);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Sector, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SectorGroup SectorGroup
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.SectorGroup);
            }
            set
            {
                global::LightSwitchApplication.Company.DetailsClass.SetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.SectorGroup, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Dealing> Dealings
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetValue(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Dealings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Dealing> DealingsQuery
        {
            get
            {
                return global::LightSwitchApplication.Company.DetailsClass.GetQuery(this, global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Dealings);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Company,
                global::LightSwitchApplication.Company.DetailsClass,
                global::LightSwitchApplication.Company.DetailsClass.IImplementation,
                global::LightSwitchApplication.Company.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>.Entry
                __CompanyEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>.Entry(
                    global::LightSwitchApplication.Company.DetailsClass.__Company_CreateNew,
                    global::LightSwitchApplication.Company.DetailsClass.__Company_Created,
                    global::LightSwitchApplication.Company.DetailsClass.__Company_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Company __Company_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Company> es)
            {
                return new global::LightSwitchApplication.Company(es);
            }
            private static void __Company_Created(global::LightSwitchApplication.Company e)
            {
                e.Company_Created();
            }
            private static bool __Company_AllowSaveWithErrors(global::LightSwitchApplication.Company e)
            {
                bool result = false;
                e.Company_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Company.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> CompanyName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.CompanyName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> IsActive
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsActive) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Comment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Comment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> Stage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Stage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> Industry
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Industry) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> IsInstallerElectrical
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerElectrical) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> IsInstallerWater
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerWater) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> IsInstallerGas
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.IsInstallerGas) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> Priority
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Priority) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> TaxNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.TaxNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Tel
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Tel) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Fax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Fax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Website
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Website) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> email
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.email) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> ParentCompany
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.ParentCompany) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>> Rep
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Rep) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string> Tags
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Tags) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact> Contact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contact) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Sector> Sector
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Sector) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Sector>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.SectorGroup> SectorGroup
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.SectorGroup) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.SectorGroup>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Dealing> Dealings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Dealings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Dealing>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string CompanyName { get; set; }
                new global::System.Nullable<int> IsActive { get; set; }
                new string Comment { get; set; }
                new global::System.Nullable<int> Stage { get; set; }
                new global::System.Nullable<int> Industry { get; set; }
                new global::System.Nullable<int> IsInstallerElectrical { get; set; }
                new global::System.Nullable<int> IsInstallerWater { get; set; }
                new global::System.Nullable<int> IsInstallerGas { get; set; }
                new global::System.Nullable<int> Priority { get; set; }
                new string TaxNumber { get; set; }
                new string Tel { get; set; }
                new string Fax { get; set; }
                new string Website { get; set; }
                new string email { get; set; }
                new global::System.Nullable<int> ParentCompany { get; set; }
                new global::System.Nullable<int> Rep { get; set; }
                new string Tags { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Contact { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Sector { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SectorGroup { get; set; }
                new global::System.Collections.IEnumerable Dealings { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    CompanyName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "CompanyName",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyName_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyName_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyName_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyName_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._CompanyName_OnValueChanged);
                private static void _CompanyName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._CompanyName, sf);
                }
                private static bool _CompanyName_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.CompanyName_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompanyName_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompanyName_Validate(r);
                }
                private static string _CompanyName_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.CompanyName;
                }
                private static void _CompanyName_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CompanyName = v;
                }
                private static void _CompanyName_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.CompanyName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    IsActive = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsActive",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsActive_OnValueChanged);
                private static void _IsActive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._IsActive, sf);
                }
                private static bool _IsActive_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.IsActive_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsActive_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsActive_Validate(r);
                }
                private static global::System.Nullable<int> _IsActive_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.IsActive;
                }
                private static void _IsActive_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsActive = v;
                }
                private static void _IsActive_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.IsActive_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Comment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Comment",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Comment_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Comment_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Comment_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Comment_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Comment_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Comment_OnValueChanged);
                private static void _Comment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Comment, sf);
                }
                private static bool _Comment_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Comment_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comment_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comment_Validate(r);
                }
                private static string _Comment_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Comment;
                }
                private static void _Comment_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comment = v;
                }
                private static void _Comment_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Comment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    Stage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Stage",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Stage_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Stage_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Stage_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Stage_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Stage_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Stage_OnValueChanged);
                private static void _Stage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Stage, sf);
                }
                private static bool _Stage_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Stage_IsReadOnly(ref result);
                    return result;
                }
                private static void _Stage_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Stage_Validate(r);
                }
                private static global::System.Nullable<int> _Stage_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Stage;
                }
                private static void _Stage_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Stage = v;
                }
                private static void _Stage_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Stage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    Industry = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Industry",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Industry_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Industry_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Industry_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Industry_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Industry_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Industry_OnValueChanged);
                private static void _Industry_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Industry, sf);
                }
                private static bool _Industry_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Industry_IsReadOnly(ref result);
                    return result;
                }
                private static void _Industry_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Industry_Validate(r);
                }
                private static global::System.Nullable<int> _Industry_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Industry;
                }
                private static void _Industry_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Industry = v;
                }
                private static void _Industry_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Industry_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    IsInstallerElectrical = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsInstallerElectrical",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerElectrical_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerElectrical_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerElectrical_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerElectrical_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerElectrical_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerElectrical_OnValueChanged);
                private static void _IsInstallerElectrical_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInstallerElectrical, sf);
                }
                private static bool _IsInstallerElectrical_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.IsInstallerElectrical_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInstallerElectrical_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInstallerElectrical_Validate(r);
                }
                private static global::System.Nullable<int> _IsInstallerElectrical_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInstallerElectrical;
                }
                private static void _IsInstallerElectrical_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsInstallerElectrical = v;
                }
                private static void _IsInstallerElectrical_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.IsInstallerElectrical_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    IsInstallerWater = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsInstallerWater",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerWater_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerWater_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerWater_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerWater_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerWater_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerWater_OnValueChanged);
                private static void _IsInstallerWater_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInstallerWater, sf);
                }
                private static bool _IsInstallerWater_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.IsInstallerWater_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInstallerWater_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInstallerWater_Validate(r);
                }
                private static global::System.Nullable<int> _IsInstallerWater_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInstallerWater;
                }
                private static void _IsInstallerWater_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsInstallerWater = v;
                }
                private static void _IsInstallerWater_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.IsInstallerWater_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    IsInstallerGas = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsInstallerGas",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerGas_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerGas_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerGas_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerGas_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerGas_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._IsInstallerGas_OnValueChanged);
                private static void _IsInstallerGas_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInstallerGas, sf);
                }
                private static bool _IsInstallerGas_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.IsInstallerGas_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInstallerGas_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInstallerGas_Validate(r);
                }
                private static global::System.Nullable<int> _IsInstallerGas_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInstallerGas;
                }
                private static void _IsInstallerGas_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsInstallerGas = v;
                }
                private static void _IsInstallerGas_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.IsInstallerGas_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    Priority = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Priority",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Priority_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Priority_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Priority_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Priority_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Priority_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Priority_OnValueChanged);
                private static void _Priority_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Priority, sf);
                }
                private static bool _Priority_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Priority_IsReadOnly(ref result);
                    return result;
                }
                private static void _Priority_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Priority_Validate(r);
                }
                private static global::System.Nullable<int> _Priority_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Priority;
                }
                private static void _Priority_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Priority = v;
                }
                private static void _Priority_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Priority_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    TaxNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "TaxNumber",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TaxNumber_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TaxNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TaxNumber_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TaxNumber_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TaxNumber_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._TaxNumber_OnValueChanged);
                private static void _TaxNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._TaxNumber, sf);
                }
                private static bool _TaxNumber_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.TaxNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _TaxNumber_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TaxNumber_Validate(r);
                }
                private static string _TaxNumber_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.TaxNumber;
                }
                private static void _TaxNumber_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TaxNumber = v;
                }
                private static void _TaxNumber_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.TaxNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Tel = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Tel",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tel_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tel_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tel_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tel_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tel_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tel_OnValueChanged);
                private static void _Tel_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Tel, sf);
                }
                private static bool _Tel_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Tel_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tel_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tel_Validate(r);
                }
                private static string _Tel_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Tel;
                }
                private static void _Tel_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Tel = v;
                }
                private static void _Tel_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Tel_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Fax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Fax",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Fax_OnValueChanged);
                private static void _Fax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Fax, sf);
                }
                private static bool _Fax_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Fax_IsReadOnly(ref result);
                    return result;
                }
                private static void _Fax_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Fax_Validate(r);
                }
                private static string _Fax_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Fax;
                }
                private static void _Fax_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Fax = v;
                }
                private static void _Fax_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Fax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Website = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Website",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Website_OnValueChanged);
                private static void _Website_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Website, sf);
                }
                private static bool _Website_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Website_IsReadOnly(ref result);
                    return result;
                }
                private static void _Website_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Website_Validate(r);
                }
                private static string _Website_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Website;
                }
                private static void _Website_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Website = v;
                }
                private static void _Website_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Website_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    email = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "email",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._email_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._email_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._email_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._email_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._email_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._email_OnValueChanged);
                private static void _email_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._email, sf);
                }
                private static bool _email_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.email_IsReadOnly(ref result);
                    return result;
                }
                private static void _email_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.email_Validate(r);
                }
                private static string _email_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.email;
                }
                private static void _email_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.email = v;
                }
                private static void _email_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.email_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    ParentCompany = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ParentCompany",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ParentCompany_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ParentCompany_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ParentCompany_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ParentCompany_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ParentCompany_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._ParentCompany_OnValueChanged);
                private static void _ParentCompany_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentCompany, sf);
                }
                private static bool _ParentCompany_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.ParentCompany_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentCompany_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentCompany_Validate(r);
                }
                private static global::System.Nullable<int> _ParentCompany_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentCompany;
                }
                private static void _ParentCompany_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ParentCompany = v;
                }
                private static void _ParentCompany_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.ParentCompany_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry
                    Rep = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Rep",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Rep_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Rep_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Rep_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Rep_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Rep_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Rep_OnValueChanged);
                private static void _Rep_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Rep, sf);
                }
                private static bool _Rep_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Rep_IsReadOnly(ref result);
                    return result;
                }
                private static void _Rep_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Rep_Validate(r);
                }
                private static global::System.Nullable<int> _Rep_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Rep;
                }
                private static void _Rep_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Rep = v;
                }
                private static void _Rep_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Rep_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry
                    Tags = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Entry(
                        "Tags",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tags_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tags_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tags_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tags_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tags_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Tags_OnValueChanged);
                private static void _Tags_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Tags, sf);
                }
                private static bool _Tags_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Tags_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tags_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tags_Validate(r);
                }
                private static string _Tags_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Tags;
                }
                private static void _Tags_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Tags = v;
                }
                private static void _Tags_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Tags_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    Contact = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "Contact",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_GetCoreImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_Refresh,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Contact_OnValueChanged);
                private static void _Contact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Contact, sf);
                }
                private static bool _Contact_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Contact_IsReadOnly(ref result);
                    return result;
                }
                private static void _Contact_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Contact_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Contact_GetCoreImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Contact;
                }
                private static global::LightSwitchApplication.Contact _Contact_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contact, ref d._Contact);
                }
                private static void _Contact_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::LightSwitchApplication.Contact v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contact, ref d._Contact, (i, ev) => i.Contact = ev, v);
                }
                private static void _Contact_Refresh(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Contact, ref d._Contact);
                }
                private static void _Contact_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Contact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Sector>.Entry
                    Sector = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Sector>.Entry(
                        "Sector",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_GetCoreImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_Refresh,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Sector_OnValueChanged);
                private static void _Sector_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Sector>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Sector, sf);
                }
                private static bool _Sector_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.Sector_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sector_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sector_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Sector_GetCoreImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Sector;
                }
                private static global::LightSwitchApplication.Sector _Sector_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Sector, global::LightSwitchApplication.Sector.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::LightSwitchApplication.Sector v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Sector, ref d._Sector, (i, ev) => i.Sector = ev, v);
                }
                private static void _Sector_Refresh(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.Sector_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry
                    SectorGroup = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry(
                        "SectorGroup",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_ComputeIsReadOnly,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_Validate,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_GetCoreImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_GetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_SetImplementationValue,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_Refresh,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._SectorGroup_OnValueChanged);
                private static void _SectorGroup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._SectorGroup, sf);
                }
                private static bool _SectorGroup_ComputeIsReadOnly(global::LightSwitchApplication.Company e)
                {
                    bool result = false;
                    e.SectorGroup_IsReadOnly(ref result);
                    return result;
                }
                private static void _SectorGroup_Validate(global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SectorGroup_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SectorGroup_GetCoreImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.SectorGroup;
                }
                private static global::LightSwitchApplication.SectorGroup _SectorGroup_GetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SectorGroup, global::LightSwitchApplication.SectorGroup.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass d, global::LightSwitchApplication.SectorGroup v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup, (i, ev) => i.SectorGroup = ev, v);
                }
                private static void _SectorGroup_Refresh(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_OnValueChanged(global::LightSwitchApplication.Company e)
                {
                    e.SectorGroup_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Dealing>.Entry
                    Dealings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Dealing>.Entry(
                        "Dealings",
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Dealings_Stub,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Dealings_GetReferencedEntities,
                        global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties._Dealings_GetEntityCollection);
                private static void _Dealings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Company.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Dealing>.Data> c, global::LightSwitchApplication.Company.DetailsClass d, object sf)
                {
                    c(d, ref d._Dealings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Dealing> _Dealings_GetReferencedEntities(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>(global::LightSwitchApplication.Company.DetailsClass.PropertySetProperties.Dealings, ref d._Dealings);
                }
                private static global::System.Collections.IEnumerable _Dealings_GetEntityCollection(global::LightSwitchApplication.Company.DetailsClass d)
                {
                    return d.ImplementationEntity.Dealings;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _CompanyName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _IsActive;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Comment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _Stage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _Industry;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _IsInstallerElectrical;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _IsInstallerWater;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _IsInstallerGas;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _Priority;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _TaxNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Tel;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Fax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Website;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _email;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _ParentCompany;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::System.Nullable<int>>.Data _Rep;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, string>.Data _Tags;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Contact>.Data _Contact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Sector>.Data _Sector;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data _SectorGroup;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass, global::LightSwitchApplication.Dealing>.Data _Dealings;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Contact : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Contact entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contact()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Contact(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contact> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Contact.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string eMail
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.eMail);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.eMail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eMail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eMail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eMail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string eMailAlternates
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.eMailAlternates);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.eMailAlternates, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eMailAlternates_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eMailAlternates_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void eMailAlternates_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FirstName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FirstName);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FirstName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirstName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LastName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.LastName);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.LastName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string KnownName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.KnownName);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.KnownName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnownName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnownName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void KnownName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comment
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Comment);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Comment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TelMobile
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelMobile);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelMobile, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelMobile_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelMobile_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelMobile_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TelHome
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelHome);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelHome, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelHome_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelHome_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelHome_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TelWork
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelWork);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelWork, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelWork_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelWork_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelWork_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TelFax
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelFax);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelFax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelFax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelFax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TelFax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsActive
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsActive);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsActive, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Stage
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Stage);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Stage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> CompanyID
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.CompanyID);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.CompanyID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CompanyID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Position
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Position);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Position, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Position_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Position_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Position_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Referredby
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Referredby);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Referredby, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referredby_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referredby_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referredby_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Rep
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Rep);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Rep, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rep_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rep_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Rep_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ContactType
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ContactType);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ContactType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ReceiveEmail
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ReceiveEmail);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ReceiveEmail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveEmail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveEmail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveEmail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ReceiveSMS
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ReceiveSMS);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ReceiveSMS, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveSMS_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveSMS_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveSMS_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> MessengerNetwork
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MessengerNetwork);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MessengerNetwork, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessengerNetwork_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessengerNetwork_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessengerNetwork_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MessengerName
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MessengerName);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MessengerName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessengerName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessengerName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MessengerName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Source
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Source);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Source, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Source_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Source_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Source_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TimeZone
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TimeZone);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TimeZone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeZone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.BirthDate);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.BirthDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BirthDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BirthDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BirthDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsInstallerElectrical
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerElectrical);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerElectrical, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerElectrical_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerElectrical_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerElectrical_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsInstallerWater
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerWater);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerWater, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerWater_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerWater_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerWater_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsInstallerGas
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerGas);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerGas, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerGas_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerGas_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsInstallerGas_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Tags
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Tags);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Tags, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tags_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tags_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tags_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Company> Companies
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Companies);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Company> CompaniesQuery
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Companies);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Sector Sector
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Sector);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Sector, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SectorGroup SectorGroup
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SectorGroup);
            }
            set
            {
                global::LightSwitchApplication.Contact.DetailsClass.SetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SectorGroup, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Dealing> Dealings
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetValue(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Dealings);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Dealing> DealingsQuery
        {
            get
            {
                return global::LightSwitchApplication.Contact.DetailsClass.GetQuery(this, global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Dealings);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Contact,
                global::LightSwitchApplication.Contact.DetailsClass,
                global::LightSwitchApplication.Contact.DetailsClass.IImplementation,
                global::LightSwitchApplication.Contact.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>.Entry
                __ContactEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>.Entry(
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_CreateNew,
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_Created,
                    global::LightSwitchApplication.Contact.DetailsClass.__Contact_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Contact __Contact_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Contact> es)
            {
                return new global::LightSwitchApplication.Contact(es);
            }
            private static void __Contact_Created(global::LightSwitchApplication.Contact e)
            {
                e.Contact_Created();
            }
            private static bool __Contact_AllowSaveWithErrors(global::LightSwitchApplication.Contact e)
            {
                bool result = false;
                e.Contact_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Contact.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> eMail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.eMail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> eMailAlternates
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.eMailAlternates) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> FirstName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.FirstName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> LastName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.LastName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> KnownName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.KnownName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Comment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Comment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> TelMobile
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelMobile) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> TelHome
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelHome) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> TelWork
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelWork) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> TelFax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TelFax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> IsActive
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsActive) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> Stage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Stage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> CompanyID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.CompanyID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Position
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Position) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> Referredby
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Referredby) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> Rep
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Rep) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> ContactType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ContactType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> ReceiveEmail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ReceiveEmail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> ReceiveSMS
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.ReceiveSMS) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> MessengerNetwork
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MessengerNetwork) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> MessengerName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.MessengerName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> Source
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Source) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> TimeZone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.TimeZone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<global::System.DateTime>> BirthDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.BirthDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> IsInstallerElectrical
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerElectrical) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> IsInstallerWater
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerWater) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>> IsInstallerGas
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.IsInstallerGas) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string> Tags
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Tags) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company> Companies
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Companies) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Sector> Sector
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Sector) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Sector>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SectorGroup> SectorGroup
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SectorGroup) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SectorGroup>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Dealing> Dealings
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Dealings) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Dealing>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string eMail { get; set; }
                new string eMailAlternates { get; set; }
                new string Title { get; set; }
                new string FirstName { get; set; }
                new string LastName { get; set; }
                new string KnownName { get; set; }
                new string Comment { get; set; }
                new string TelMobile { get; set; }
                new string TelHome { get; set; }
                new string TelWork { get; set; }
                new string TelFax { get; set; }
                new global::System.Nullable<int> IsActive { get; set; }
                new global::System.Nullable<int> Stage { get; set; }
                new global::System.Nullable<int> CompanyID { get; set; }
                new string Position { get; set; }
                new global::System.Nullable<int> Referredby { get; set; }
                new global::System.Nullable<int> Rep { get; set; }
                new global::System.Nullable<int> ContactType { get; set; }
                new global::System.Nullable<int> ReceiveEmail { get; set; }
                new global::System.Nullable<int> ReceiveSMS { get; set; }
                new global::System.Nullable<int> MessengerNetwork { get; set; }
                new string MessengerName { get; set; }
                new global::System.Nullable<int> Source { get; set; }
                new string TimeZone { get; set; }
                new global::System.Nullable<global::System.DateTime> BirthDate { get; set; }
                new global::System.Nullable<int> IsInstallerElectrical { get; set; }
                new global::System.Nullable<int> IsInstallerWater { get; set; }
                new global::System.Nullable<int> IsInstallerGas { get; set; }
                new string Tags { get; set; }
                new global::System.Collections.IEnumerable Companies { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Sector { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SectorGroup { get; set; }
                new global::System.Collections.IEnumerable Dealings { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    eMail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "eMail",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMail_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMail_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMail_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMail_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMail_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMail_OnValueChanged);
                private static void _eMail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._eMail, sf);
                }
                private static bool _eMail_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.eMail_IsReadOnly(ref result);
                    return result;
                }
                private static void _eMail_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.eMail_Validate(r);
                }
                private static string _eMail_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.eMail;
                }
                private static void _eMail_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.eMail = v;
                }
                private static void _eMail_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.eMail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    eMailAlternates = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "eMailAlternates",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMailAlternates_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMailAlternates_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMailAlternates_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMailAlternates_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMailAlternates_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._eMailAlternates_OnValueChanged);
                private static void _eMailAlternates_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._eMailAlternates, sf);
                }
                private static bool _eMailAlternates_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.eMailAlternates_IsReadOnly(ref result);
                    return result;
                }
                private static void _eMailAlternates_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.eMailAlternates_Validate(r);
                }
                private static string _eMailAlternates_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.eMailAlternates;
                }
                private static void _eMailAlternates_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.eMailAlternates = v;
                }
                private static void _eMailAlternates_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.eMailAlternates_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    FirstName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "FirstName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._FirstName_OnValueChanged);
                private static void _FirstName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._FirstName, sf);
                }
                private static bool _FirstName_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.FirstName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FirstName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FirstName_Validate(r);
                }
                private static string _FirstName_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.FirstName;
                }
                private static void _FirstName_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FirstName = v;
                }
                private static void _FirstName_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.FirstName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    LastName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "LastName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._LastName_OnValueChanged);
                private static void _LastName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._LastName, sf);
                }
                private static bool _LastName_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.LastName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastName_Validate(r);
                }
                private static string _LastName_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.LastName;
                }
                private static void _LastName_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LastName = v;
                }
                private static void _LastName_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.LastName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    KnownName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "KnownName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._KnownName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._KnownName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._KnownName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._KnownName_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._KnownName_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._KnownName_OnValueChanged);
                private static void _KnownName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._KnownName, sf);
                }
                private static bool _KnownName_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.KnownName_IsReadOnly(ref result);
                    return result;
                }
                private static void _KnownName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.KnownName_Validate(r);
                }
                private static string _KnownName_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.KnownName;
                }
                private static void _KnownName_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.KnownName = v;
                }
                private static void _KnownName_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.KnownName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Comment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Comment",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Comment_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Comment_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Comment_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Comment_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Comment_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Comment_OnValueChanged);
                private static void _Comment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Comment, sf);
                }
                private static bool _Comment_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Comment_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comment_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comment_Validate(r);
                }
                private static string _Comment_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Comment;
                }
                private static void _Comment_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comment = v;
                }
                private static void _Comment_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Comment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    TelMobile = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "TelMobile",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelMobile_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelMobile_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelMobile_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelMobile_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelMobile_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelMobile_OnValueChanged);
                private static void _TelMobile_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._TelMobile, sf);
                }
                private static bool _TelMobile_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.TelMobile_IsReadOnly(ref result);
                    return result;
                }
                private static void _TelMobile_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TelMobile_Validate(r);
                }
                private static string _TelMobile_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.TelMobile;
                }
                private static void _TelMobile_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TelMobile = v;
                }
                private static void _TelMobile_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.TelMobile_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    TelHome = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "TelHome",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelHome_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelHome_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelHome_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelHome_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelHome_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelHome_OnValueChanged);
                private static void _TelHome_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._TelHome, sf);
                }
                private static bool _TelHome_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.TelHome_IsReadOnly(ref result);
                    return result;
                }
                private static void _TelHome_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TelHome_Validate(r);
                }
                private static string _TelHome_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.TelHome;
                }
                private static void _TelHome_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TelHome = v;
                }
                private static void _TelHome_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.TelHome_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    TelWork = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "TelWork",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelWork_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelWork_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelWork_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelWork_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelWork_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelWork_OnValueChanged);
                private static void _TelWork_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._TelWork, sf);
                }
                private static bool _TelWork_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.TelWork_IsReadOnly(ref result);
                    return result;
                }
                private static void _TelWork_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TelWork_Validate(r);
                }
                private static string _TelWork_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.TelWork;
                }
                private static void _TelWork_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TelWork = v;
                }
                private static void _TelWork_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.TelWork_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    TelFax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "TelFax",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelFax_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelFax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelFax_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelFax_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelFax_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TelFax_OnValueChanged);
                private static void _TelFax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._TelFax, sf);
                }
                private static bool _TelFax_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.TelFax_IsReadOnly(ref result);
                    return result;
                }
                private static void _TelFax_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TelFax_Validate(r);
                }
                private static string _TelFax_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.TelFax;
                }
                private static void _TelFax_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TelFax = v;
                }
                private static void _TelFax_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.TelFax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    IsActive = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsActive",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsActive_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsActive_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsActive_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsActive_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsActive_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsActive_OnValueChanged);
                private static void _IsActive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._IsActive, sf);
                }
                private static bool _IsActive_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.IsActive_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsActive_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsActive_Validate(r);
                }
                private static global::System.Nullable<int> _IsActive_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.IsActive;
                }
                private static void _IsActive_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsActive = v;
                }
                private static void _IsActive_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.IsActive_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    Stage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Stage",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Stage_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Stage_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Stage_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Stage_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Stage_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Stage_OnValueChanged);
                private static void _Stage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Stage, sf);
                }
                private static bool _Stage_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Stage_IsReadOnly(ref result);
                    return result;
                }
                private static void _Stage_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Stage_Validate(r);
                }
                private static global::System.Nullable<int> _Stage_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Stage;
                }
                private static void _Stage_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Stage = v;
                }
                private static void _Stage_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Stage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    CompanyID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "CompanyID",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._CompanyID_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._CompanyID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._CompanyID_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._CompanyID_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._CompanyID_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._CompanyID_OnValueChanged);
                private static void _CompanyID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._CompanyID, sf);
                }
                private static bool _CompanyID_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.CompanyID_IsReadOnly(ref result);
                    return result;
                }
                private static void _CompanyID_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CompanyID_Validate(r);
                }
                private static global::System.Nullable<int> _CompanyID_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.CompanyID;
                }
                private static void _CompanyID_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.CompanyID = v;
                }
                private static void _CompanyID_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.CompanyID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Position = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Position",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Position_OnValueChanged);
                private static void _Position_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Position, sf);
                }
                private static bool _Position_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Position_IsReadOnly(ref result);
                    return result;
                }
                private static void _Position_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Position_Validate(r);
                }
                private static string _Position_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Position;
                }
                private static void _Position_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Position = v;
                }
                private static void _Position_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Position_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    Referredby = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Referredby",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Referredby_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Referredby_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Referredby_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Referredby_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Referredby_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Referredby_OnValueChanged);
                private static void _Referredby_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Referredby, sf);
                }
                private static bool _Referredby_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Referredby_IsReadOnly(ref result);
                    return result;
                }
                private static void _Referredby_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Referredby_Validate(r);
                }
                private static global::System.Nullable<int> _Referredby_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Referredby;
                }
                private static void _Referredby_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Referredby = v;
                }
                private static void _Referredby_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Referredby_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    Rep = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Rep",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Rep_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Rep_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Rep_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Rep_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Rep_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Rep_OnValueChanged);
                private static void _Rep_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Rep, sf);
                }
                private static bool _Rep_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Rep_IsReadOnly(ref result);
                    return result;
                }
                private static void _Rep_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Rep_Validate(r);
                }
                private static global::System.Nullable<int> _Rep_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Rep;
                }
                private static void _Rep_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Rep = v;
                }
                private static void _Rep_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Rep_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    ContactType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ContactType",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ContactType_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ContactType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ContactType_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ContactType_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ContactType_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ContactType_OnValueChanged);
                private static void _ContactType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactType, sf);
                }
                private static bool _ContactType_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.ContactType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactType_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactType_Validate(r);
                }
                private static global::System.Nullable<int> _ContactType_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactType;
                }
                private static void _ContactType_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ContactType = v;
                }
                private static void _ContactType_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.ContactType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    ReceiveEmail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ReceiveEmail",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveEmail_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveEmail_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveEmail_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveEmail_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveEmail_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveEmail_OnValueChanged);
                private static void _ReceiveEmail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._ReceiveEmail, sf);
                }
                private static bool _ReceiveEmail_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.ReceiveEmail_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReceiveEmail_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReceiveEmail_Validate(r);
                }
                private static global::System.Nullable<int> _ReceiveEmail_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.ReceiveEmail;
                }
                private static void _ReceiveEmail_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ReceiveEmail = v;
                }
                private static void _ReceiveEmail_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.ReceiveEmail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    ReceiveSMS = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ReceiveSMS",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveSMS_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveSMS_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveSMS_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveSMS_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveSMS_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._ReceiveSMS_OnValueChanged);
                private static void _ReceiveSMS_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._ReceiveSMS, sf);
                }
                private static bool _ReceiveSMS_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.ReceiveSMS_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReceiveSMS_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReceiveSMS_Validate(r);
                }
                private static global::System.Nullable<int> _ReceiveSMS_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.ReceiveSMS;
                }
                private static void _ReceiveSMS_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ReceiveSMS = v;
                }
                private static void _ReceiveSMS_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.ReceiveSMS_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    MessengerNetwork = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "MessengerNetwork",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerNetwork_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerNetwork_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerNetwork_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerNetwork_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerNetwork_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerNetwork_OnValueChanged);
                private static void _MessengerNetwork_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._MessengerNetwork, sf);
                }
                private static bool _MessengerNetwork_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.MessengerNetwork_IsReadOnly(ref result);
                    return result;
                }
                private static void _MessengerNetwork_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MessengerNetwork_Validate(r);
                }
                private static global::System.Nullable<int> _MessengerNetwork_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.MessengerNetwork;
                }
                private static void _MessengerNetwork_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.MessengerNetwork = v;
                }
                private static void _MessengerNetwork_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.MessengerNetwork_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    MessengerName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "MessengerName",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerName_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerName_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerName_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerName_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._MessengerName_OnValueChanged);
                private static void _MessengerName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._MessengerName, sf);
                }
                private static bool _MessengerName_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.MessengerName_IsReadOnly(ref result);
                    return result;
                }
                private static void _MessengerName_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MessengerName_Validate(r);
                }
                private static string _MessengerName_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.MessengerName;
                }
                private static void _MessengerName_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MessengerName = v;
                }
                private static void _MessengerName_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.MessengerName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    Source = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Source",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Source_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Source_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Source_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Source_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Source_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Source_OnValueChanged);
                private static void _Source_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Source, sf);
                }
                private static bool _Source_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Source_IsReadOnly(ref result);
                    return result;
                }
                private static void _Source_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Source_Validate(r);
                }
                private static global::System.Nullable<int> _Source_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Source;
                }
                private static void _Source_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Source = v;
                }
                private static void _Source_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Source_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    TimeZone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "TimeZone",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TimeZone_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TimeZone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TimeZone_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TimeZone_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TimeZone_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._TimeZone_OnValueChanged);
                private static void _TimeZone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeZone, sf);
                }
                private static bool _TimeZone_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.TimeZone_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeZone_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeZone_Validate(r);
                }
                private static string _TimeZone_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeZone;
                }
                private static void _TimeZone_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TimeZone = v;
                }
                private static void _TimeZone_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.TimeZone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    BirthDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "BirthDate",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._BirthDate_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._BirthDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._BirthDate_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._BirthDate_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._BirthDate_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._BirthDate_OnValueChanged);
                private static void _BirthDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._BirthDate, sf);
                }
                private static bool _BirthDate_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.BirthDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _BirthDate_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BirthDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _BirthDate_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.BirthDate;
                }
                private static void _BirthDate_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.BirthDate = global::LightSwitchApplication.Contact.DetailsClass.TruncateDate(v);
                }
                private static void _BirthDate_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.BirthDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    IsInstallerElectrical = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsInstallerElectrical",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerElectrical_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerElectrical_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerElectrical_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerElectrical_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerElectrical_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerElectrical_OnValueChanged);
                private static void _IsInstallerElectrical_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInstallerElectrical, sf);
                }
                private static bool _IsInstallerElectrical_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.IsInstallerElectrical_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInstallerElectrical_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInstallerElectrical_Validate(r);
                }
                private static global::System.Nullable<int> _IsInstallerElectrical_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInstallerElectrical;
                }
                private static void _IsInstallerElectrical_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsInstallerElectrical = v;
                }
                private static void _IsInstallerElectrical_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.IsInstallerElectrical_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    IsInstallerWater = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsInstallerWater",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerWater_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerWater_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerWater_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerWater_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerWater_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerWater_OnValueChanged);
                private static void _IsInstallerWater_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInstallerWater, sf);
                }
                private static bool _IsInstallerWater_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.IsInstallerWater_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInstallerWater_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInstallerWater_Validate(r);
                }
                private static global::System.Nullable<int> _IsInstallerWater_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInstallerWater;
                }
                private static void _IsInstallerWater_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsInstallerWater = v;
                }
                private static void _IsInstallerWater_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.IsInstallerWater_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry
                    IsInstallerGas = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsInstallerGas",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerGas_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerGas_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerGas_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerGas_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerGas_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._IsInstallerGas_OnValueChanged);
                private static void _IsInstallerGas_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._IsInstallerGas, sf);
                }
                private static bool _IsInstallerGas_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.IsInstallerGas_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsInstallerGas_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsInstallerGas_Validate(r);
                }
                private static global::System.Nullable<int> _IsInstallerGas_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.IsInstallerGas;
                }
                private static void _IsInstallerGas_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsInstallerGas = v;
                }
                private static void _IsInstallerGas_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.IsInstallerGas_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry
                    Tags = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Entry(
                        "Tags",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Tags_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Tags_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Tags_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Tags_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Tags_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Tags_OnValueChanged);
                private static void _Tags_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Tags, sf);
                }
                private static bool _Tags_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Tags_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tags_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tags_Validate(r);
                }
                private static string _Tags_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Tags;
                }
                private static void _Tags_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Tags = v;
                }
                private static void _Tags_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Tags_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Entry
                    Companies = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Entry(
                        "Companies",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Companies_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Companies_GetReferencedEntities,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Companies_GetEntityCollection);
                private static void _Companies_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Companies, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Company> _Companies_GetReferencedEntities(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Companies, ref d._Companies);
                }
                private static global::System.Collections.IEnumerable _Companies_GetEntityCollection(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Companies;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Sector>.Entry
                    Sector = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Sector>.Entry(
                        "Sector",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_Refresh,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Sector_OnValueChanged);
                private static void _Sector_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Sector>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Sector, sf);
                }
                private static bool _Sector_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.Sector_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sector_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sector_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Sector_GetCoreImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Sector;
                }
                private static global::LightSwitchApplication.Sector _Sector_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Sector, global::LightSwitchApplication.Sector.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::LightSwitchApplication.Sector v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Sector, ref d._Sector, (i, ev) => i.Sector = ev, v);
                }
                private static void _Sector_Refresh(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.Sector_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry
                    SectorGroup = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry(
                        "SectorGroup",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_ComputeIsReadOnly,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_Validate,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_GetCoreImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_GetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_SetImplementationValue,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_Refresh,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._SectorGroup_OnValueChanged);
                private static void _SectorGroup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._SectorGroup, sf);
                }
                private static bool _SectorGroup_ComputeIsReadOnly(global::LightSwitchApplication.Contact e)
                {
                    bool result = false;
                    e.SectorGroup_IsReadOnly(ref result);
                    return result;
                }
                private static void _SectorGroup_Validate(global::LightSwitchApplication.Contact e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SectorGroup_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SectorGroup_GetCoreImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.SectorGroup;
                }
                private static global::LightSwitchApplication.SectorGroup _SectorGroup_GetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SectorGroup, global::LightSwitchApplication.SectorGroup.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass d, global::LightSwitchApplication.SectorGroup v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup, (i, ev) => i.SectorGroup = ev, v);
                }
                private static void _SectorGroup_Refresh(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_OnValueChanged(global::LightSwitchApplication.Contact e)
                {
                    e.SectorGroup_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Dealing>.Entry
                    Dealings = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Dealing>.Entry(
                        "Dealings",
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Dealings_Stub,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Dealings_GetReferencedEntities,
                        global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties._Dealings_GetEntityCollection);
                private static void _Dealings_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Contact.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Dealing>.Data> c, global::LightSwitchApplication.Contact.DetailsClass d, object sf)
                {
                    c(d, ref d._Dealings, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Dealing> _Dealings_GetReferencedEntities(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>(global::LightSwitchApplication.Contact.DetailsClass.PropertySetProperties.Dealings, ref d._Dealings);
                }
                private static global::System.Collections.IEnumerable _Dealings_GetEntityCollection(global::LightSwitchApplication.Contact.DetailsClass d)
                {
                    return d.ImplementationEntity.Dealings;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _eMail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _eMailAlternates;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _FirstName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _LastName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _KnownName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Comment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _TelMobile;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _TelHome;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _TelWork;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _TelFax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _IsActive;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _Stage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _CompanyID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Position;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _Referredby;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _Rep;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _ContactType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _ReceiveEmail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _ReceiveSMS;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _MessengerNetwork;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _MessengerName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _Source;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _TimeZone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _BirthDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _IsInstallerElectrical;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _IsInstallerWater;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::System.Nullable<int>>.Data _IsInstallerGas;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, string>.Data _Tags;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Company>.Data _Companies;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Sector>.Data _Sector;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data _SectorGroup;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass, global::LightSwitchApplication.Dealing>.Data _Dealings;
            
        }
    
        #endregion
    }
    
    #endregion
}
