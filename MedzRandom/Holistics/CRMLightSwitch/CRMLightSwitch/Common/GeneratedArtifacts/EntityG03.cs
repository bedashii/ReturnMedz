

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class db_key : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the db_key entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public db_key()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public db_key(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.db_key> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.db_key.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void db_key_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void db_key_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.db_key.DetailsClass.GetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> problems
        {
            get
            {
                return global::LightSwitchApplication.db_key.DetailsClass.GetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.problems);
            }
            set
            {
                global::LightSwitchApplication.db_key.DetailsClass.SetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.problems, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void problems_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void problems_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void problems_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> departments
        {
            get
            {
                return global::LightSwitchApplication.db_key.DetailsClass.GetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.departments);
            }
            set
            {
                global::LightSwitchApplication.db_key.DetailsClass.SetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.departments, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void departments_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void departments_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void departments_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> categories
        {
            get
            {
                return global::LightSwitchApplication.db_key.DetailsClass.GetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.categories);
            }
            set
            {
                global::LightSwitchApplication.db_key.DetailsClass.SetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.categories, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void categories_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void categories_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void categories_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> users
        {
            get
            {
                return global::LightSwitchApplication.db_key.DetailsClass.GetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.users);
            }
            set
            {
                global::LightSwitchApplication.db_key.DetailsClass.SetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.users, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void users_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void users_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void users_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Lang
        {
            get
            {
                return global::LightSwitchApplication.db_key.DetailsClass.GetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.Lang);
            }
            set
            {
                global::LightSwitchApplication.db_key.DetailsClass.SetValue(this, global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.Lang, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lang_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lang_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Lang_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.db_key,
                global::LightSwitchApplication.db_key.DetailsClass,
                global::LightSwitchApplication.db_key.DetailsClass.IImplementation,
                global::LightSwitchApplication.db_key.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass>.Entry
                __db_keyEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass>.Entry(
                    global::LightSwitchApplication.db_key.DetailsClass.__db_key_CreateNew,
                    global::LightSwitchApplication.db_key.DetailsClass.__db_key_Created,
                    global::LightSwitchApplication.db_key.DetailsClass.__db_key_AllowSaveWithErrors);
            private static global::LightSwitchApplication.db_key __db_key_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.db_key> es)
            {
                return new global::LightSwitchApplication.db_key(es);
            }
            private static void __db_key_Created(global::LightSwitchApplication.db_key e)
            {
                e.db_key_Created();
            }
            private static bool __db_key_AllowSaveWithErrors(global::LightSwitchApplication.db_key e)
            {
                bool result = false;
                e.db_key_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.db_key.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>> problems
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.problems) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>> departments
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.departments) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>> categories
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.categories) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>> users
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.users) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>> Lang
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties.Lang) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new global::System.Nullable<int> problems { get; set; }
                new global::System.Nullable<int> departments { get; set; }
                new global::System.Nullable<int> categories { get; set; }
                new global::System.Nullable<int> users { get; set; }
                new global::System.Nullable<int> Lang { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.db_key.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, int>.Data> c, global::LightSwitchApplication.db_key.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.db_key e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.db_key e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.db_key e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry
                    problems = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry(
                        "problems",
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._problems_Stub,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._problems_ComputeIsReadOnly,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._problems_Validate,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._problems_GetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._problems_SetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._problems_OnValueChanged);
                private static void _problems_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.db_key.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.db_key.DetailsClass d, object sf)
                {
                    c(d, ref d._problems, sf);
                }
                private static bool _problems_ComputeIsReadOnly(global::LightSwitchApplication.db_key e)
                {
                    bool result = false;
                    e.problems_IsReadOnly(ref result);
                    return result;
                }
                private static void _problems_Validate(global::LightSwitchApplication.db_key e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.problems_Validate(r);
                }
                private static global::System.Nullable<int> _problems_GetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d)
                {
                    return d.ImplementationEntity.problems;
                }
                private static void _problems_SetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.problems = v;
                }
                private static void _problems_OnValueChanged(global::LightSwitchApplication.db_key e)
                {
                    e.problems_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry
                    departments = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry(
                        "departments",
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._departments_Stub,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._departments_ComputeIsReadOnly,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._departments_Validate,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._departments_GetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._departments_SetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._departments_OnValueChanged);
                private static void _departments_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.db_key.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.db_key.DetailsClass d, object sf)
                {
                    c(d, ref d._departments, sf);
                }
                private static bool _departments_ComputeIsReadOnly(global::LightSwitchApplication.db_key e)
                {
                    bool result = false;
                    e.departments_IsReadOnly(ref result);
                    return result;
                }
                private static void _departments_Validate(global::LightSwitchApplication.db_key e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.departments_Validate(r);
                }
                private static global::System.Nullable<int> _departments_GetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d)
                {
                    return d.ImplementationEntity.departments;
                }
                private static void _departments_SetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.departments = v;
                }
                private static void _departments_OnValueChanged(global::LightSwitchApplication.db_key e)
                {
                    e.departments_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry
                    categories = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry(
                        "categories",
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._categories_Stub,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._categories_ComputeIsReadOnly,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._categories_Validate,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._categories_GetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._categories_SetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._categories_OnValueChanged);
                private static void _categories_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.db_key.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.db_key.DetailsClass d, object sf)
                {
                    c(d, ref d._categories, sf);
                }
                private static bool _categories_ComputeIsReadOnly(global::LightSwitchApplication.db_key e)
                {
                    bool result = false;
                    e.categories_IsReadOnly(ref result);
                    return result;
                }
                private static void _categories_Validate(global::LightSwitchApplication.db_key e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.categories_Validate(r);
                }
                private static global::System.Nullable<int> _categories_GetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d)
                {
                    return d.ImplementationEntity.categories;
                }
                private static void _categories_SetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.categories = v;
                }
                private static void _categories_OnValueChanged(global::LightSwitchApplication.db_key e)
                {
                    e.categories_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry
                    users = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry(
                        "users",
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._users_Stub,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._users_ComputeIsReadOnly,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._users_Validate,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._users_GetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._users_SetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._users_OnValueChanged);
                private static void _users_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.db_key.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.db_key.DetailsClass d, object sf)
                {
                    c(d, ref d._users, sf);
                }
                private static bool _users_ComputeIsReadOnly(global::LightSwitchApplication.db_key e)
                {
                    bool result = false;
                    e.users_IsReadOnly(ref result);
                    return result;
                }
                private static void _users_Validate(global::LightSwitchApplication.db_key e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.users_Validate(r);
                }
                private static global::System.Nullable<int> _users_GetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d)
                {
                    return d.ImplementationEntity.users;
                }
                private static void _users_SetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.users = v;
                }
                private static void _users_OnValueChanged(global::LightSwitchApplication.db_key e)
                {
                    e.users_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry
                    Lang = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Lang",
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._Lang_Stub,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._Lang_ComputeIsReadOnly,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._Lang_Validate,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._Lang_GetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._Lang_SetImplementationValue,
                        global::LightSwitchApplication.db_key.DetailsClass.PropertySetProperties._Lang_OnValueChanged);
                private static void _Lang_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.db_key.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.db_key.DetailsClass d, object sf)
                {
                    c(d, ref d._Lang, sf);
                }
                private static bool _Lang_ComputeIsReadOnly(global::LightSwitchApplication.db_key e)
                {
                    bool result = false;
                    e.Lang_IsReadOnly(ref result);
                    return result;
                }
                private static void _Lang_Validate(global::LightSwitchApplication.db_key e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Lang_Validate(r);
                }
                private static global::System.Nullable<int> _Lang_GetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d)
                {
                    return d.ImplementationEntity.Lang;
                }
                private static void _Lang_SetImplementationValue(global::LightSwitchApplication.db_key.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Lang = v;
                }
                private static void _Lang_OnValueChanged(global::LightSwitchApplication.db_key e)
                {
                    e.Lang_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data _problems;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data _departments;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data _categories;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data _users;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.db_key, global::LightSwitchApplication.db_key.DetailsClass, global::System.Nullable<int>>.Data _Lang;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Dealing : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Dealing entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Dealing()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Dealing(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Dealing> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Dealing.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Dealing_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Dealing_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Title
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Title);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comment
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Comment);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Comment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Prospect
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Prospect);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Prospect, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prospect_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prospect_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prospect_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Product
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Product);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Product, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ProjectedQty
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedQty);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedQty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedQty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedQty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedQty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ProjectedRevenue
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedRevenue);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedRevenue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedRevenue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedRevenue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedRevenue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ProjectedActualiztion
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedActualiztion);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedActualiztion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedActualiztion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedActualiztion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProjectedActualiztion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Stage
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Stage);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Stage, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Stage_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Actualized
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Actualized);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Actualized, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actualized_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actualized_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Actualized_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ActualizedQty
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ActualizedQty);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ActualizedQty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualizedQty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualizedQty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualizedQty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> ActualizedDate
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ActualizedDate);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ActualizedDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualizedDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualizedDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ActualizedDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ExcludeFromReports
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ExcludeFromReports);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ExcludeFromReports, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExcludeFromReports_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExcludeFromReports_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExcludeFromReports_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Company Company1
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Company1);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Company1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Contact Contact1
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Contact1);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Contact1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Sector Sector
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Sector);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Sector, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SectorGroup SectorGroup
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.SectorGroup);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.SectorGroup, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.tblUser tblUser
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.tblUser);
            }
            set
            {
                global::LightSwitchApplication.Dealing.DetailsClass.SetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.tblUser, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tblUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tblUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tblUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.problem> problems
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetValue(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.problems);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.problem> problemsQuery
        {
            get
            {
                return global::LightSwitchApplication.Dealing.DetailsClass.GetQuery(this, global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.problems);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Dealing,
                global::LightSwitchApplication.Dealing.DetailsClass,
                global::LightSwitchApplication.Dealing.DetailsClass.IImplementation,
                global::LightSwitchApplication.Dealing.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>.Entry
                __DealingEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>.Entry(
                    global::LightSwitchApplication.Dealing.DetailsClass.__Dealing_CreateNew,
                    global::LightSwitchApplication.Dealing.DetailsClass.__Dealing_Created,
                    global::LightSwitchApplication.Dealing.DetailsClass.__Dealing_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Dealing __Dealing_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Dealing> es)
            {
                return new global::LightSwitchApplication.Dealing(es);
            }
            private static void __Dealing_Created(global::LightSwitchApplication.Dealing e)
            {
                e.Dealing_Created();
            }
            private static bool __Dealing_AllowSaveWithErrors(global::LightSwitchApplication.Dealing e)
            {
                bool result = false;
                e.Dealing_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Dealing.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string> Title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string> Comment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Comment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>> Prospect
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Prospect) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>> Product
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Product) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string> ProjectedQty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedQty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>> ProjectedRevenue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedRevenue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>> ProjectedActualiztion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ProjectedActualiztion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>> Stage
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Stage) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>> Actualized
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Actualized) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>> ActualizedQty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ActualizedQty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>> ActualizedDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ActualizedDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>> ExcludeFromReports
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.ExcludeFromReports) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Company> Company1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Company1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Company>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Contact> Contact1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Contact1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Contact>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Sector> Sector
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Sector) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Sector>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.SectorGroup> SectorGroup
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.SectorGroup) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.SectorGroup>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.tblUser> tblUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.tblUser) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.tblUser>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.problem> problems
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.problems) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.problem>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string Title { get; set; }
                new string Comment { get; set; }
                new global::System.Nullable<int> Prospect { get; set; }
                new global::System.Nullable<int> Product { get; set; }
                new string ProjectedQty { get; set; }
                new global::System.Nullable<int> ProjectedRevenue { get; set; }
                new global::System.Nullable<global::System.DateTime> ProjectedActualiztion { get; set; }
                new global::System.Nullable<int> Stage { get; set; }
                new global::System.Nullable<int> Actualized { get; set; }
                new global::System.Nullable<int> ActualizedQty { get; set; }
                new global::System.Nullable<global::System.DateTime> ActualizedDate { get; set; }
                new global::System.Nullable<int> ExcludeFromReports { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Company1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Contact1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Sector { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SectorGroup { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation tblUser { get; set; }
                new global::System.Collections.IEnumerable problems { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, int>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Entry
                    Title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Entry(
                        "Title",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Title_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Title_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Title_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Title_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Title_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Title_OnValueChanged);
                private static void _Title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Title, sf);
                }
                private static bool _Title_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Title_IsReadOnly(ref result);
                    return result;
                }
                private static void _Title_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Title_Validate(r);
                }
                private static string _Title_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Title;
                }
                private static void _Title_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Title = v;
                }
                private static void _Title_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Entry
                    Comment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Entry(
                        "Comment",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Comment_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Comment_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Comment_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Comment_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Comment_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Comment_OnValueChanged);
                private static void _Comment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Comment, sf);
                }
                private static bool _Comment_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Comment_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comment_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comment_Validate(r);
                }
                private static string _Comment_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Comment;
                }
                private static void _Comment_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comment = v;
                }
                private static void _Comment_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Comment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry
                    Prospect = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Prospect",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Prospect_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Prospect_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Prospect_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Prospect_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Prospect_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Prospect_OnValueChanged);
                private static void _Prospect_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Prospect, sf);
                }
                private static bool _Prospect_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Prospect_IsReadOnly(ref result);
                    return result;
                }
                private static void _Prospect_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Prospect_Validate(r);
                }
                private static global::System.Nullable<int> _Prospect_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Prospect;
                }
                private static void _Prospect_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Prospect = v;
                }
                private static void _Prospect_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Prospect_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry
                    Product = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Product",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Product_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Product_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Product_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Product_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Product_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Product_OnValueChanged);
                private static void _Product_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Product, sf);
                }
                private static bool _Product_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Product_IsReadOnly(ref result);
                    return result;
                }
                private static void _Product_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Product_Validate(r);
                }
                private static global::System.Nullable<int> _Product_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Product;
                }
                private static void _Product_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Product = v;
                }
                private static void _Product_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Product_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Entry
                    ProjectedQty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Entry(
                        "ProjectedQty",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedQty_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedQty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedQty_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedQty_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedQty_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedQty_OnValueChanged);
                private static void _ProjectedQty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectedQty, sf);
                }
                private static bool _ProjectedQty_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.ProjectedQty_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectedQty_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectedQty_Validate(r);
                }
                private static string _ProjectedQty_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectedQty;
                }
                private static void _ProjectedQty_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ProjectedQty = v;
                }
                private static void _ProjectedQty_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.ProjectedQty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry
                    ProjectedRevenue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ProjectedRevenue",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedRevenue_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedRevenue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedRevenue_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedRevenue_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedRevenue_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedRevenue_OnValueChanged);
                private static void _ProjectedRevenue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectedRevenue, sf);
                }
                private static bool _ProjectedRevenue_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.ProjectedRevenue_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectedRevenue_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectedRevenue_Validate(r);
                }
                private static global::System.Nullable<int> _ProjectedRevenue_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectedRevenue;
                }
                private static void _ProjectedRevenue_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ProjectedRevenue = v;
                }
                private static void _ProjectedRevenue_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.ProjectedRevenue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ProjectedActualiztion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ProjectedActualiztion",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedActualiztion_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedActualiztion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedActualiztion_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedActualiztion_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedActualiztion_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ProjectedActualiztion_OnValueChanged);
                private static void _ProjectedActualiztion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._ProjectedActualiztion, sf);
                }
                private static bool _ProjectedActualiztion_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.ProjectedActualiztion_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProjectedActualiztion_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProjectedActualiztion_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ProjectedActualiztion_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.ProjectedActualiztion;
                }
                private static void _ProjectedActualiztion_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ProjectedActualiztion = global::LightSwitchApplication.Dealing.DetailsClass.TruncateDate(v);
                }
                private static void _ProjectedActualiztion_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.ProjectedActualiztion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry
                    Stage = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Stage",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Stage_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Stage_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Stage_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Stage_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Stage_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Stage_OnValueChanged);
                private static void _Stage_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Stage, sf);
                }
                private static bool _Stage_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Stage_IsReadOnly(ref result);
                    return result;
                }
                private static void _Stage_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Stage_Validate(r);
                }
                private static global::System.Nullable<int> _Stage_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Stage;
                }
                private static void _Stage_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Stage = v;
                }
                private static void _Stage_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Stage_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry
                    Actualized = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Actualized",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Actualized_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Actualized_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Actualized_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Actualized_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Actualized_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Actualized_OnValueChanged);
                private static void _Actualized_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Actualized, sf);
                }
                private static bool _Actualized_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Actualized_IsReadOnly(ref result);
                    return result;
                }
                private static void _Actualized_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Actualized_Validate(r);
                }
                private static global::System.Nullable<int> _Actualized_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Actualized;
                }
                private static void _Actualized_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Actualized = v;
                }
                private static void _Actualized_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Actualized_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry
                    ActualizedQty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ActualizedQty",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedQty_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedQty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedQty_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedQty_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedQty_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedQty_OnValueChanged);
                private static void _ActualizedQty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualizedQty, sf);
                }
                private static bool _ActualizedQty_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.ActualizedQty_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualizedQty_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualizedQty_Validate(r);
                }
                private static global::System.Nullable<int> _ActualizedQty_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualizedQty;
                }
                private static void _ActualizedQty_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ActualizedQty = v;
                }
                private static void _ActualizedQty_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.ActualizedQty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    ActualizedDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "ActualizedDate",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedDate_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedDate_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedDate_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedDate_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ActualizedDate_OnValueChanged);
                private static void _ActualizedDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._ActualizedDate, sf);
                }
                private static bool _ActualizedDate_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.ActualizedDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ActualizedDate_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ActualizedDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _ActualizedDate_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.ActualizedDate;
                }
                private static void _ActualizedDate_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.ActualizedDate = global::LightSwitchApplication.Dealing.DetailsClass.TruncateDate(v);
                }
                private static void _ActualizedDate_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.ActualizedDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry
                    ExcludeFromReports = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ExcludeFromReports",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ExcludeFromReports_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ExcludeFromReports_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ExcludeFromReports_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ExcludeFromReports_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ExcludeFromReports_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._ExcludeFromReports_OnValueChanged);
                private static void _ExcludeFromReports_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._ExcludeFromReports, sf);
                }
                private static bool _ExcludeFromReports_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.ExcludeFromReports_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExcludeFromReports_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExcludeFromReports_Validate(r);
                }
                private static global::System.Nullable<int> _ExcludeFromReports_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.ExcludeFromReports;
                }
                private static void _ExcludeFromReports_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ExcludeFromReports = v;
                }
                private static void _ExcludeFromReports_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.ExcludeFromReports_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Company>.Entry
                    Company1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Company>.Entry(
                        "Company1",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_GetCoreImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_Refresh,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Company1_OnValueChanged);
                private static void _Company1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Company>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Company1, sf);
                }
                private static bool _Company1_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Company1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Company1_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Company1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Company1_GetCoreImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Company1;
                }
                private static global::LightSwitchApplication.Company _Company1_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Company, global::LightSwitchApplication.Company.DetailsClass>(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Company1, ref d._Company1);
                }
                private static void _Company1_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::LightSwitchApplication.Company v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Company1, ref d._Company1, (i, ev) => i.Company1 = ev, v);
                }
                private static void _Company1_Refresh(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Company1, ref d._Company1);
                }
                private static void _Company1_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Company1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    Contact1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "Contact1",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_GetCoreImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_Refresh,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Contact1_OnValueChanged);
                private static void _Contact1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Contact1, sf);
                }
                private static bool _Contact1_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Contact1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Contact1_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Contact1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Contact1_GetCoreImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Contact1;
                }
                private static global::LightSwitchApplication.Contact _Contact1_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Contact1, ref d._Contact1);
                }
                private static void _Contact1_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::LightSwitchApplication.Contact v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Contact1, ref d._Contact1, (i, ev) => i.Contact1 = ev, v);
                }
                private static void _Contact1_Refresh(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Contact1, ref d._Contact1);
                }
                private static void _Contact1_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Contact1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Sector>.Entry
                    Sector = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Sector>.Entry(
                        "Sector",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_GetCoreImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_Refresh,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._Sector_OnValueChanged);
                private static void _Sector_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Sector>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._Sector, sf);
                }
                private static bool _Sector_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.Sector_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sector_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sector_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Sector_GetCoreImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.Sector;
                }
                private static global::LightSwitchApplication.Sector _Sector_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Sector, global::LightSwitchApplication.Sector.DetailsClass>(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::LightSwitchApplication.Sector v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Sector, ref d._Sector, (i, ev) => i.Sector = ev, v);
                }
                private static void _Sector_Refresh(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.Sector_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry
                    SectorGroup = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry(
                        "SectorGroup",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_GetCoreImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_Refresh,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._SectorGroup_OnValueChanged);
                private static void _SectorGroup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._SectorGroup, sf);
                }
                private static bool _SectorGroup_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.SectorGroup_IsReadOnly(ref result);
                    return result;
                }
                private static void _SectorGroup_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SectorGroup_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SectorGroup_GetCoreImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.SectorGroup;
                }
                private static global::LightSwitchApplication.SectorGroup _SectorGroup_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SectorGroup, global::LightSwitchApplication.SectorGroup.DetailsClass>(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::LightSwitchApplication.SectorGroup v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup, (i, ev) => i.SectorGroup = ev, v);
                }
                private static void _SectorGroup_Refresh(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.SectorGroup_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.tblUser>.Entry
                    tblUser = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.tblUser>.Entry(
                        "tblUser",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_Validate,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_GetCoreImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_GetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_SetImplementationValue,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_Refresh,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._tblUser_OnValueChanged);
                private static void _tblUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.tblUser>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._tblUser, sf);
                }
                private static bool _tblUser_ComputeIsReadOnly(global::LightSwitchApplication.Dealing e)
                {
                    bool result = false;
                    e.tblUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _tblUser_Validate(global::LightSwitchApplication.Dealing e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tblUser_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _tblUser_GetCoreImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.tblUser;
                }
                private static global::LightSwitchApplication.tblUser _tblUser_GetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.tblUser, global::LightSwitchApplication.tblUser.DetailsClass>(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.tblUser, ref d._tblUser);
                }
                private static void _tblUser_SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass d, global::LightSwitchApplication.tblUser v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.tblUser, ref d._tblUser, (i, ev) => i.tblUser = ev, v);
                }
                private static void _tblUser_Refresh(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.tblUser, ref d._tblUser);
                }
                private static void _tblUser_OnValueChanged(global::LightSwitchApplication.Dealing e)
                {
                    e.tblUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.problem>.Entry
                    problems = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.problem>.Entry(
                        "problems",
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._problems_Stub,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._problems_GetReferencedEntities,
                        global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties._problems_GetEntityCollection);
                private static void _problems_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Dealing.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.problem>.Data> c, global::LightSwitchApplication.Dealing.DetailsClass d, object sf)
                {
                    c(d, ref d._problems, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.problem> _problems_GetReferencedEntities(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>(global::LightSwitchApplication.Dealing.DetailsClass.PropertySetProperties.problems, ref d._problems);
                }
                private static global::System.Collections.IEnumerable _problems_GetEntityCollection(global::LightSwitchApplication.Dealing.DetailsClass d)
                {
                    return d.ImplementationEntity.problems;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Data _Title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Data _Comment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data _Prospect;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data _Product;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, string>.Data _ProjectedQty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data _ProjectedRevenue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ProjectedActualiztion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data _Stage;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data _Actualized;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data _ActualizedQty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _ActualizedDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::System.Nullable<int>>.Data _ExcludeFromReports;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Company>.Data _Company1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Contact>.Data _Contact1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.Sector>.Data _Sector;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data _SectorGroup;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.tblUser>.Data _tblUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass, global::LightSwitchApplication.problem>.Data _problems;
            
        }
    
        #endregion
    }
    
    #endregion
}
