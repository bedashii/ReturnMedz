

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class problem : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the problem entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public problem()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public problem(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.problem> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.problem.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void problem_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void problem_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int id
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> ContactID
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ContactID);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ContactID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CallerName
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerName);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CallerEmail
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerEmail);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerEmail, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerEmail_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerEmail_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerEmail_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CallerLocation
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerLocation);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerLocation, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerLocation_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerLocation_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerLocation_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CallerPhone
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerPhone);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerPhone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerPhone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerPhone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CallerPhone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> rep
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.rep);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.rep, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rep_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rep_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rep_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> time_spent
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.time_spent);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.time_spent, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void time_spent_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void time_spent_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void time_spent_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string title
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.title);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.title, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void title_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void title_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void title_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string description
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.description);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string solution
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.solution);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.solution, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void solution_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void solution_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void solution_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> start_date
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.start_date);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.start_date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void start_date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void start_date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void start_date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> close_date
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.close_date);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.close_date, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void close_date_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void close_date_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void close_date_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> kb
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.kb);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.kb, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void kb_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void kb_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void kb_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Referer
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Referer);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Referer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Referer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MeterNumber
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.MeterNumber);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.MeterNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MeterNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MeterNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MeterNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClientNumber
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ClientNumber);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ClientNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClientNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.category category1
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.category1);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.category1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Dealing Dealing
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Dealing);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Dealing, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Dealing_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Dealing_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Dealing_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.department department1
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.department1);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.department1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void department1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void department1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void department1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.priority priority1
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.priority1);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.priority1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void priority1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void priority1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void priority1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Sector Sector
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Sector);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Sector, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sector_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.SectorGroup SectorGroup
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.SectorGroup);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.SectorGroup, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SectorGroup_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.status status1
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.status1);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.status1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void status1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void status1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void status1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.tblUser tblUser
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblUser);
            }
            set
            {
                global::LightSwitchApplication.problem.DetailsClass.SetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblUser, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tblUser_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tblUser_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void tblUser_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ProblemsRelated> ProblemsRelateds
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProblemsRelated> ProblemsRelatedsQuery
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetQuery(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ProblemsRelated> ProblemsRelateds1
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds1);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ProblemsRelated> ProblemsRelateds1Query
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetQuery(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds1);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.tblNote> tblNotes
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetValue(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblNotes);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.tblNote> tblNotesQuery
        {
            get
            {
                return global::LightSwitchApplication.problem.DetailsClass.GetQuery(this, global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblNotes);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.problem,
                global::LightSwitchApplication.problem.DetailsClass,
                global::LightSwitchApplication.problem.DetailsClass.IImplementation,
                global::LightSwitchApplication.problem.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>.Entry
                __problemEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>.Entry(
                    global::LightSwitchApplication.problem.DetailsClass.__problem_CreateNew,
                    global::LightSwitchApplication.problem.DetailsClass.__problem_Created,
                    global::LightSwitchApplication.problem.DetailsClass.__problem_AllowSaveWithErrors);
            private static global::LightSwitchApplication.problem __problem_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.problem> es)
            {
                return new global::LightSwitchApplication.problem(es);
            }
            private static void __problem_Created(global::LightSwitchApplication.problem e)
            {
                e.problem_Created();
            }
            private static bool __problem_AllowSaveWithErrors(global::LightSwitchApplication.problem e)
            {
                bool result = false;
                e.problem_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.problem.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, int> id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>> ContactID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ContactID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> CallerName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> CallerEmail
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerEmail) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> CallerLocation
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerLocation) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> CallerPhone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.CallerPhone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>> rep
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.rep) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>> time_spent
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.time_spent) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> title
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.title) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> solution
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.solution) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>> start_date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.start_date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>> close_date
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.close_date) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>> kb
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.kb) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> Referer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Referer) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> MeterNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.MeterNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string> ClientNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ClientNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.category> category1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.category1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.category>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Dealing> Dealing
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Dealing) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Dealing>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.department> department1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.department1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.department>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.priority> priority1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.priority1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.priority>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Sector> Sector
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Sector) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Sector>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.SectorGroup> SectorGroup
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.SectorGroup) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.SectorGroup>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.status> status1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.status1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.status>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblUser> tblUser
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblUser) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblUser>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated> ProblemsRelateds
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated> ProblemsRelateds1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds1) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblNote> tblNotes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblNotes) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblNote>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int id { get; }
                new global::System.Nullable<int> ContactID { get; set; }
                new string CallerName { get; set; }
                new string CallerEmail { get; set; }
                new string CallerLocation { get; set; }
                new string CallerPhone { get; set; }
                new global::System.Nullable<int> rep { get; set; }
                new global::System.Nullable<int> time_spent { get; set; }
                new string title { get; set; }
                new string description { get; set; }
                new string solution { get; set; }
                new global::System.Nullable<global::System.DateTime> start_date { get; set; }
                new global::System.Nullable<global::System.DateTime> close_date { get; set; }
                new global::System.Nullable<int> kb { get; set; }
                new string Referer { get; set; }
                new string MeterNumber { get; set; }
                new string ClientNumber { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation category1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Dealing { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation department1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation priority1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Sector { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation SectorGroup { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation status1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation tblUser { get; set; }
                new global::System.Collections.IEnumerable ProblemsRelateds { get; }
                new global::System.Collections.IEnumerable ProblemsRelateds1 { get; }
                new global::System.Collections.IEnumerable tblNotes { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, int>.Entry
                    id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, int>.Entry(
                        "id",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._id_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._id_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._id_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._id_OnValueChanged);
                private static void _id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, int>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._id, sf);
                }
                private static bool _id_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.id_IsReadOnly(ref result);
                    return result;
                }
                private static void _id_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.id_Validate(r);
                }
                private static int _id_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.id;
                }
                private static void _id_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry
                    ContactID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "ContactID",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ContactID_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ContactID_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ContactID_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ContactID_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ContactID_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ContactID_OnValueChanged);
                private static void _ContactID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactID, sf);
                }
                private static bool _ContactID_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.ContactID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactID_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactID_Validate(r);
                }
                private static global::System.Nullable<int> _ContactID_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactID;
                }
                private static void _ContactID_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.ContactID = v;
                }
                private static void _ContactID_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.ContactID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    CallerName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "CallerName",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerName_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerName_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerName_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerName_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerName_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerName_OnValueChanged);
                private static void _CallerName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._CallerName, sf);
                }
                private static bool _CallerName_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.CallerName_IsReadOnly(ref result);
                    return result;
                }
                private static void _CallerName_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CallerName_Validate(r);
                }
                private static string _CallerName_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.CallerName;
                }
                private static void _CallerName_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CallerName = v;
                }
                private static void _CallerName_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.CallerName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    CallerEmail = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "CallerEmail",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerEmail_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerEmail_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerEmail_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerEmail_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerEmail_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerEmail_OnValueChanged);
                private static void _CallerEmail_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._CallerEmail, sf);
                }
                private static bool _CallerEmail_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.CallerEmail_IsReadOnly(ref result);
                    return result;
                }
                private static void _CallerEmail_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CallerEmail_Validate(r);
                }
                private static string _CallerEmail_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.CallerEmail;
                }
                private static void _CallerEmail_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CallerEmail = v;
                }
                private static void _CallerEmail_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.CallerEmail_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    CallerLocation = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "CallerLocation",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerLocation_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerLocation_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerLocation_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerLocation_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerLocation_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerLocation_OnValueChanged);
                private static void _CallerLocation_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._CallerLocation, sf);
                }
                private static bool _CallerLocation_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.CallerLocation_IsReadOnly(ref result);
                    return result;
                }
                private static void _CallerLocation_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CallerLocation_Validate(r);
                }
                private static string _CallerLocation_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.CallerLocation;
                }
                private static void _CallerLocation_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CallerLocation = v;
                }
                private static void _CallerLocation_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.CallerLocation_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    CallerPhone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "CallerPhone",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerPhone_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerPhone_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerPhone_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerPhone_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerPhone_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._CallerPhone_OnValueChanged);
                private static void _CallerPhone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._CallerPhone, sf);
                }
                private static bool _CallerPhone_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.CallerPhone_IsReadOnly(ref result);
                    return result;
                }
                private static void _CallerPhone_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CallerPhone_Validate(r);
                }
                private static string _CallerPhone_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.CallerPhone;
                }
                private static void _CallerPhone_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CallerPhone = v;
                }
                private static void _CallerPhone_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.CallerPhone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry
                    rep = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "rep",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._rep_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._rep_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._rep_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._rep_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._rep_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._rep_OnValueChanged);
                private static void _rep_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._rep, sf);
                }
                private static bool _rep_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.rep_IsReadOnly(ref result);
                    return result;
                }
                private static void _rep_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.rep_Validate(r);
                }
                private static global::System.Nullable<int> _rep_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.rep;
                }
                private static void _rep_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.rep = v;
                }
                private static void _rep_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.rep_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry
                    time_spent = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "time_spent",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._time_spent_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._time_spent_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._time_spent_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._time_spent_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._time_spent_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._time_spent_OnValueChanged);
                private static void _time_spent_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._time_spent, sf);
                }
                private static bool _time_spent_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.time_spent_IsReadOnly(ref result);
                    return result;
                }
                private static void _time_spent_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.time_spent_Validate(r);
                }
                private static global::System.Nullable<int> _time_spent_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.time_spent;
                }
                private static void _time_spent_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.time_spent = v;
                }
                private static void _time_spent_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.time_spent_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    title = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "title",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._title_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._title_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._title_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._title_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._title_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._title_OnValueChanged);
                private static void _title_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._title, sf);
                }
                private static bool _title_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.title_IsReadOnly(ref result);
                    return result;
                }
                private static void _title_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.title_Validate(r);
                }
                private static string _title_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.title;
                }
                private static void _title_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.title = v;
                }
                private static void _title_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.title_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "description",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._description_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._description_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._description_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._description_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._description_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._description_OnValueChanged);
                private static void _description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._description, sf);
                }
                private static bool _description_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.description_IsReadOnly(ref result);
                    return result;
                }
                private static void _description_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.description_Validate(r);
                }
                private static string _description_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.description;
                }
                private static void _description_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.description = v;
                }
                private static void _description_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    solution = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "solution",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._solution_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._solution_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._solution_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._solution_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._solution_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._solution_OnValueChanged);
                private static void _solution_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._solution, sf);
                }
                private static bool _solution_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.solution_IsReadOnly(ref result);
                    return result;
                }
                private static void _solution_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.solution_Validate(r);
                }
                private static string _solution_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.solution;
                }
                private static void _solution_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.solution = v;
                }
                private static void _solution_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.solution_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    start_date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "start_date",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._start_date_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._start_date_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._start_date_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._start_date_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._start_date_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._start_date_OnValueChanged);
                private static void _start_date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._start_date, sf);
                }
                private static bool _start_date_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.start_date_IsReadOnly(ref result);
                    return result;
                }
                private static void _start_date_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.start_date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _start_date_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.start_date;
                }
                private static void _start_date_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.start_date = global::LightSwitchApplication.problem.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _start_date_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.start_date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    close_date = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "close_date",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._close_date_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._close_date_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._close_date_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._close_date_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._close_date_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._close_date_OnValueChanged);
                private static void _close_date_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._close_date, sf);
                }
                private static bool _close_date_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.close_date_IsReadOnly(ref result);
                    return result;
                }
                private static void _close_date_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.close_date_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _close_date_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.close_date;
                }
                private static void _close_date_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.close_date = global::LightSwitchApplication.problem.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _close_date_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.close_date_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry
                    kb = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Entry(
                        "kb",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._kb_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._kb_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._kb_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._kb_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._kb_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._kb_OnValueChanged);
                private static void _kb_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._kb, sf);
                }
                private static bool _kb_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.kb_IsReadOnly(ref result);
                    return result;
                }
                private static void _kb_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.kb_Validate(r);
                }
                private static global::System.Nullable<int> _kb_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.kb;
                }
                private static void _kb_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.kb = v;
                }
                private static void _kb_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.kb_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    Referer = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "Referer",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Referer_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Referer_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Referer_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Referer_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Referer_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Referer_OnValueChanged);
                private static void _Referer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._Referer, sf);
                }
                private static bool _Referer_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.Referer_IsReadOnly(ref result);
                    return result;
                }
                private static void _Referer_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Referer_Validate(r);
                }
                private static string _Referer_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.Referer;
                }
                private static void _Referer_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Referer = v;
                }
                private static void _Referer_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.Referer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    MeterNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "MeterNumber",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._MeterNumber_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._MeterNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._MeterNumber_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._MeterNumber_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._MeterNumber_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._MeterNumber_OnValueChanged);
                private static void _MeterNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._MeterNumber, sf);
                }
                private static bool _MeterNumber_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.MeterNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _MeterNumber_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MeterNumber_Validate(r);
                }
                private static string _MeterNumber_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.MeterNumber;
                }
                private static void _MeterNumber_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MeterNumber = v;
                }
                private static void _MeterNumber_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.MeterNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry
                    ClientNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Entry(
                        "ClientNumber",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ClientNumber_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ClientNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ClientNumber_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ClientNumber_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ClientNumber_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ClientNumber_OnValueChanged);
                private static void _ClientNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._ClientNumber, sf);
                }
                private static bool _ClientNumber_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.ClientNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClientNumber_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClientNumber_Validate(r);
                }
                private static string _ClientNumber_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.ClientNumber;
                }
                private static void _ClientNumber_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClientNumber = v;
                }
                private static void _ClientNumber_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.ClientNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.category>.Entry
                    category1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.category>.Entry(
                        "category1",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._category1_OnValueChanged);
                private static void _category1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.category>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._category1, sf);
                }
                private static bool _category1_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.category1_IsReadOnly(ref result);
                    return result;
                }
                private static void _category1_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.category1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _category1_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.category1;
                }
                private static global::LightSwitchApplication.category _category1_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.category1, ref d._category1);
                }
                private static void _category1_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.category v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.category1, ref d._category1, (i, ev) => i.category1 = ev, v);
                }
                private static void _category1_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.category1, ref d._category1);
                }
                private static void _category1_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.category1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Dealing>.Entry
                    Dealing = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Dealing>.Entry(
                        "Dealing",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Dealing_OnValueChanged);
                private static void _Dealing_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Dealing>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._Dealing, sf);
                }
                private static bool _Dealing_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.Dealing_IsReadOnly(ref result);
                    return result;
                }
                private static void _Dealing_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Dealing_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Dealing_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.Dealing;
                }
                private static global::LightSwitchApplication.Dealing _Dealing_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Dealing, global::LightSwitchApplication.Dealing.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Dealing, ref d._Dealing);
                }
                private static void _Dealing_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.Dealing v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Dealing, ref d._Dealing, (i, ev) => i.Dealing = ev, v);
                }
                private static void _Dealing_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Dealing, ref d._Dealing);
                }
                private static void _Dealing_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.Dealing_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.department>.Entry
                    department1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.department>.Entry(
                        "department1",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._department1_OnValueChanged);
                private static void _department1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.department>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._department1, sf);
                }
                private static bool _department1_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.department1_IsReadOnly(ref result);
                    return result;
                }
                private static void _department1_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.department1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _department1_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.department1;
                }
                private static global::LightSwitchApplication.department _department1_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.department, global::LightSwitchApplication.department.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.department1, ref d._department1);
                }
                private static void _department1_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.department v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.department1, ref d._department1, (i, ev) => i.department1 = ev, v);
                }
                private static void _department1_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.department1, ref d._department1);
                }
                private static void _department1_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.department1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.priority>.Entry
                    priority1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.priority>.Entry(
                        "priority1",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._priority1_OnValueChanged);
                private static void _priority1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.priority>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._priority1, sf);
                }
                private static bool _priority1_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.priority1_IsReadOnly(ref result);
                    return result;
                }
                private static void _priority1_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.priority1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _priority1_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.priority1;
                }
                private static global::LightSwitchApplication.priority _priority1_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.priority, global::LightSwitchApplication.priority.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.priority1, ref d._priority1);
                }
                private static void _priority1_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.priority v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.priority1, ref d._priority1, (i, ev) => i.priority1 = ev, v);
                }
                private static void _priority1_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.priority1, ref d._priority1);
                }
                private static void _priority1_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.priority1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Sector>.Entry
                    Sector = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Sector>.Entry(
                        "Sector",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._Sector_OnValueChanged);
                private static void _Sector_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Sector>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._Sector, sf);
                }
                private static bool _Sector_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.Sector_IsReadOnly(ref result);
                    return result;
                }
                private static void _Sector_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Sector_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Sector_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.Sector;
                }
                private static global::LightSwitchApplication.Sector _Sector_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Sector, global::LightSwitchApplication.Sector.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.Sector v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Sector, ref d._Sector, (i, ev) => i.Sector = ev, v);
                }
                private static void _Sector_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.Sector, ref d._Sector);
                }
                private static void _Sector_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.Sector_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry
                    SectorGroup = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.SectorGroup>.Entry(
                        "SectorGroup",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._SectorGroup_OnValueChanged);
                private static void _SectorGroup_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._SectorGroup, sf);
                }
                private static bool _SectorGroup_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.SectorGroup_IsReadOnly(ref result);
                    return result;
                }
                private static void _SectorGroup_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SectorGroup_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _SectorGroup_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.SectorGroup;
                }
                private static global::LightSwitchApplication.SectorGroup _SectorGroup_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.SectorGroup, global::LightSwitchApplication.SectorGroup.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.SectorGroup v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup, (i, ev) => i.SectorGroup = ev, v);
                }
                private static void _SectorGroup_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.SectorGroup, ref d._SectorGroup);
                }
                private static void _SectorGroup_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.SectorGroup_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.status>.Entry
                    status1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.status>.Entry(
                        "status1",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._status1_OnValueChanged);
                private static void _status1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.status>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._status1, sf);
                }
                private static bool _status1_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.status1_IsReadOnly(ref result);
                    return result;
                }
                private static void _status1_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.status1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _status1_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.status1;
                }
                private static global::LightSwitchApplication.status _status1_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.status, global::LightSwitchApplication.status.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.status1, ref d._status1);
                }
                private static void _status1_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.status v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.status1, ref d._status1, (i, ev) => i.status1 = ev, v);
                }
                private static void _status1_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.status1, ref d._status1);
                }
                private static void _status1_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.status1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblUser>.Entry
                    tblUser = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblUser>.Entry(
                        "tblUser",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_ComputeIsReadOnly,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_Validate,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_GetCoreImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_GetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_SetImplementationValue,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_Refresh,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblUser_OnValueChanged);
                private static void _tblUser_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblUser>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._tblUser, sf);
                }
                private static bool _tblUser_ComputeIsReadOnly(global::LightSwitchApplication.problem e)
                {
                    bool result = false;
                    e.tblUser_IsReadOnly(ref result);
                    return result;
                }
                private static void _tblUser_Validate(global::LightSwitchApplication.problem e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.tblUser_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _tblUser_GetCoreImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.tblUser;
                }
                private static global::LightSwitchApplication.tblUser _tblUser_GetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.tblUser, global::LightSwitchApplication.tblUser.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblUser, ref d._tblUser);
                }
                private static void _tblUser_SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass d, global::LightSwitchApplication.tblUser v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblUser, ref d._tblUser, (i, ev) => i.tblUser = ev, v);
                }
                private static void _tblUser_Refresh(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblUser, ref d._tblUser);
                }
                private static void _tblUser_OnValueChanged(global::LightSwitchApplication.problem e)
                {
                    e.tblUser_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Entry
                    ProblemsRelateds = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Entry(
                        "ProblemsRelateds",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ProblemsRelateds_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ProblemsRelateds_GetReferencedEntities,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ProblemsRelateds_GetEntityCollection);
                private static void _ProblemsRelateds_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._ProblemsRelateds, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProblemsRelated> _ProblemsRelateds_GetReferencedEntities(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ProblemsRelated, global::LightSwitchApplication.ProblemsRelated.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds, ref d._ProblemsRelateds);
                }
                private static global::System.Collections.IEnumerable _ProblemsRelateds_GetEntityCollection(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.ProblemsRelateds;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Entry
                    ProblemsRelateds1 = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Entry(
                        "ProblemsRelateds1",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ProblemsRelateds1_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ProblemsRelateds1_GetReferencedEntities,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._ProblemsRelateds1_GetEntityCollection);
                private static void _ProblemsRelateds1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._ProblemsRelateds1, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProblemsRelated> _ProblemsRelateds1_GetReferencedEntities(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ProblemsRelated, global::LightSwitchApplication.ProblemsRelated.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.ProblemsRelateds1, ref d._ProblemsRelateds1);
                }
                private static global::System.Collections.IEnumerable _ProblemsRelateds1_GetEntityCollection(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.ProblemsRelateds1;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblNote>.Entry
                    tblNotes = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblNote>.Entry(
                        "tblNotes",
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblNotes_Stub,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblNotes_GetReferencedEntities,
                        global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties._tblNotes_GetEntityCollection);
                private static void _tblNotes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.problem.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblNote>.Data> c, global::LightSwitchApplication.problem.DetailsClass d, object sf)
                {
                    c(d, ref d._tblNotes, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.tblNote> _tblNotes_GetReferencedEntities(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.tblNote, global::LightSwitchApplication.tblNote.DetailsClass>(global::LightSwitchApplication.problem.DetailsClass.PropertySetProperties.tblNotes, ref d._tblNotes);
                }
                private static global::System.Collections.IEnumerable _tblNotes_GetEntityCollection(global::LightSwitchApplication.problem.DetailsClass d)
                {
                    return d.ImplementationEntity.tblNotes;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, int>.Data _id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data _ContactID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _CallerName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _CallerEmail;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _CallerLocation;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _CallerPhone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data _rep;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data _time_spent;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _title;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _solution;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _start_date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _close_date;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::System.Nullable<int>>.Data _kb;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _Referer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _MeterNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, string>.Data _ClientNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.category>.Data _category1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Dealing>.Data _Dealing;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.department>.Data _department1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.priority>.Data _priority1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.Sector>.Data _Sector;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.SectorGroup>.Data _SectorGroup;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.status>.Data _status1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblUser>.Data _tblUser;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Data _ProblemsRelateds;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.ProblemsRelated>.Data _ProblemsRelateds1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass, global::LightSwitchApplication.tblNote>.Data _tblNotes;
            
        }
    
        #endregion
    }
    
    #endregion
}
