

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class State : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the State entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public State()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public State(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.State> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.State.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int StateID
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateID);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StateTable
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateTable);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateTable, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateTable_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateTable_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateTable_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StateColumn
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateColumn);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateColumn, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateColumn_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateColumn_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateColumn_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StateField
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateField);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateField, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateField_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateField_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateField_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StateDescription
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateDescription);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StateDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsActive
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.IsActive);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.IsActive, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> DisplayOrder
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.DisplayOrder);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.DisplayOrder, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayOrder_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayOrder_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DisplayOrder_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> Schedule
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.Schedule);
            }
            set
            {
                global::LightSwitchApplication.State.DetailsClass.SetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.Schedule, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Schedule_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.tblNote> tblNotes
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetValue(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.tblNotes);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.tblNote> tblNotesQuery
        {
            get
            {
                return global::LightSwitchApplication.State.DetailsClass.GetQuery(this, global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.tblNotes);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.State,
                global::LightSwitchApplication.State.DetailsClass,
                global::LightSwitchApplication.State.DetailsClass.IImplementation,
                global::LightSwitchApplication.State.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass>.Entry
                __StateEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass>.Entry(
                    global::LightSwitchApplication.State.DetailsClass.__State_CreateNew,
                    global::LightSwitchApplication.State.DetailsClass.__State_Created,
                    global::LightSwitchApplication.State.DetailsClass.__State_AllowSaveWithErrors);
            private static global::LightSwitchApplication.State __State_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.State> es)
            {
                return new global::LightSwitchApplication.State(es);
            }
            private static void __State_Created(global::LightSwitchApplication.State e)
            {
                e.State_Created();
            }
            private static bool __State_AllowSaveWithErrors(global::LightSwitchApplication.State e)
            {
                bool result = false;
                e.State_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.State.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, int> StateID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string> StateTable
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateTable) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string> StateColumn
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateColumn) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string> StateField
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateField) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string> StateDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.StateDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>> IsActive
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.IsActive) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>> DisplayOrder
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.DisplayOrder) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>> Schedule
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.Schedule) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::LightSwitchApplication.tblNote> tblNotes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.tblNotes) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::LightSwitchApplication.tblNote>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int StateID { get; set; }
                new string StateTable { get; set; }
                new string StateColumn { get; set; }
                new string StateField { get; set; }
                new string StateDescription { get; set; }
                new global::System.Nullable<int> IsActive { get; set; }
                new global::System.Nullable<int> DisplayOrder { get; set; }
                new global::System.Nullable<int> Schedule { get; set; }
                new global::System.Collections.IEnumerable tblNotes { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, int>.Entry
                    StateID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, int>.Entry(
                        "StateID",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateID_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateID_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateID_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateID_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateID_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateID_OnValueChanged);
                private static void _StateID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, int>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._StateID, sf);
                }
                private static bool _StateID_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.StateID_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateID_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateID_Validate(r);
                }
                private static int _StateID_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.StateID;
                }
                private static void _StateID_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, int v)
                {
                    d.ImplementationEntity.StateID = v;
                }
                private static void _StateID_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.StateID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry
                    StateTable = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry(
                        "StateTable",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateTable_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateTable_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateTable_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateTable_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateTable_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateTable_OnValueChanged);
                private static void _StateTable_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._StateTable, sf);
                }
                private static bool _StateTable_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.StateTable_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateTable_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateTable_Validate(r);
                }
                private static string _StateTable_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.StateTable;
                }
                private static void _StateTable_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StateTable = v;
                }
                private static void _StateTable_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.StateTable_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry
                    StateColumn = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry(
                        "StateColumn",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateColumn_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateColumn_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateColumn_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateColumn_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateColumn_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateColumn_OnValueChanged);
                private static void _StateColumn_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._StateColumn, sf);
                }
                private static bool _StateColumn_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.StateColumn_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateColumn_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateColumn_Validate(r);
                }
                private static string _StateColumn_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.StateColumn;
                }
                private static void _StateColumn_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StateColumn = v;
                }
                private static void _StateColumn_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.StateColumn_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry
                    StateField = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry(
                        "StateField",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateField_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateField_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateField_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateField_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateField_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateField_OnValueChanged);
                private static void _StateField_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._StateField, sf);
                }
                private static bool _StateField_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.StateField_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateField_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateField_Validate(r);
                }
                private static string _StateField_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.StateField;
                }
                private static void _StateField_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StateField = v;
                }
                private static void _StateField_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.StateField_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry
                    StateDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Entry(
                        "StateDescription",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateDescription_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateDescription_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateDescription_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateDescription_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._StateDescription_OnValueChanged);
                private static void _StateDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._StateDescription, sf);
                }
                private static bool _StateDescription_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.StateDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _StateDescription_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StateDescription_Validate(r);
                }
                private static string _StateDescription_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.StateDescription;
                }
                private static void _StateDescription_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StateDescription = v;
                }
                private static void _StateDescription_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.StateDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Entry
                    IsActive = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsActive",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._IsActive_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._IsActive_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._IsActive_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._IsActive_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._IsActive_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._IsActive_OnValueChanged);
                private static void _IsActive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._IsActive, sf);
                }
                private static bool _IsActive_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.IsActive_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsActive_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsActive_Validate(r);
                }
                private static global::System.Nullable<int> _IsActive_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.IsActive;
                }
                private static void _IsActive_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsActive = v;
                }
                private static void _IsActive_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.IsActive_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Entry
                    DisplayOrder = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Entry(
                        "DisplayOrder",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._DisplayOrder_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._DisplayOrder_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._DisplayOrder_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._DisplayOrder_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._DisplayOrder_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._DisplayOrder_OnValueChanged);
                private static void _DisplayOrder_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._DisplayOrder, sf);
                }
                private static bool _DisplayOrder_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.DisplayOrder_IsReadOnly(ref result);
                    return result;
                }
                private static void _DisplayOrder_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DisplayOrder_Validate(r);
                }
                private static global::System.Nullable<int> _DisplayOrder_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.DisplayOrder;
                }
                private static void _DisplayOrder_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.DisplayOrder = v;
                }
                private static void _DisplayOrder_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.DisplayOrder_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Entry
                    Schedule = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Entry(
                        "Schedule",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._Schedule_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._Schedule_ComputeIsReadOnly,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._Schedule_Validate,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._Schedule_GetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._Schedule_SetImplementationValue,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._Schedule_OnValueChanged);
                private static void _Schedule_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._Schedule, sf);
                }
                private static bool _Schedule_ComputeIsReadOnly(global::LightSwitchApplication.State e)
                {
                    bool result = false;
                    e.Schedule_IsReadOnly(ref result);
                    return result;
                }
                private static void _Schedule_Validate(global::LightSwitchApplication.State e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Schedule_Validate(r);
                }
                private static global::System.Nullable<int> _Schedule_GetImplementationValue(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.Schedule;
                }
                private static void _Schedule_SetImplementationValue(global::LightSwitchApplication.State.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.Schedule = v;
                }
                private static void _Schedule_OnValueChanged(global::LightSwitchApplication.State e)
                {
                    e.Schedule_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::LightSwitchApplication.tblNote>.Entry
                    tblNotes = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::LightSwitchApplication.tblNote>.Entry(
                        "tblNotes",
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._tblNotes_Stub,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._tblNotes_GetReferencedEntities,
                        global::LightSwitchApplication.State.DetailsClass.PropertySetProperties._tblNotes_GetEntityCollection);
                private static void _tblNotes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.State.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::LightSwitchApplication.tblNote>.Data> c, global::LightSwitchApplication.State.DetailsClass d, object sf)
                {
                    c(d, ref d._tblNotes, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.tblNote> _tblNotes_GetReferencedEntities(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.tblNote, global::LightSwitchApplication.tblNote.DetailsClass>(global::LightSwitchApplication.State.DetailsClass.PropertySetProperties.tblNotes, ref d._tblNotes);
                }
                private static global::System.Collections.IEnumerable _tblNotes_GetEntityCollection(global::LightSwitchApplication.State.DetailsClass d)
                {
                    return d.ImplementationEntity.tblNotes;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, int>.Data _StateID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data _StateTable;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data _StateColumn;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data _StateField;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, string>.Data _StateDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Data _IsActive;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Data _DisplayOrder;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::System.Nullable<int>>.Data _Schedule;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.State, global::LightSwitchApplication.State.DetailsClass, global::LightSwitchApplication.tblNote>.Data _tblNotes;
            
        }
    
        #endregion
    }
    
    #endregion
}
