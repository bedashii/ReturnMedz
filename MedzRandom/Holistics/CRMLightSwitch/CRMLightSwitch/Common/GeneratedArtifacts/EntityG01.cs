

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class Address : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Address entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Address()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Address(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Address> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Address.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TableName
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.TableName);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.TableName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> TableReference
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.TableReference);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.TableReference, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableReference_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableReference_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TableReference_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> AddressType
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressType);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsActive
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.IsActive);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.IsActive, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsActive_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> IsDefault
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.IsDefault);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.IsDefault, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsDefault_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsDefault_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsDefault_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AddressTitle
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressTitle);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressTitle, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressTitle_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressTitle_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressTitle_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AddressLine1
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine1);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AddressLine2
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine2);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressLine2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string State
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.State);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.State, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Zip
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Zip);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Zip, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zip_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zip_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Zip_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Country
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Country);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Country, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.DateAdded);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.DateAdded, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateAdded_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateAdded_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateAdded_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Address,
                global::LightSwitchApplication.Address.DetailsClass,
                global::LightSwitchApplication.Address.DetailsClass.IImplementation,
                global::LightSwitchApplication.Address.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>.Entry
                __AddressEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>.Entry(
                    global::LightSwitchApplication.Address.DetailsClass.__Address_CreateNew,
                    global::LightSwitchApplication.Address.DetailsClass.__Address_Created,
                    global::LightSwitchApplication.Address.DetailsClass.__Address_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Address __Address_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Address> es)
            {
                return new global::LightSwitchApplication.Address(es);
            }
            private static void __Address_Created(global::LightSwitchApplication.Address e)
            {
                e.Address_Created();
            }
            private static bool __Address_AllowSaveWithErrors(global::LightSwitchApplication.Address e)
            {
                bool result = false;
                e.Address_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Address.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> TableName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.TableName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>> TableReference
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.TableReference) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>> AddressType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>> IsActive
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.IsActive) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>> IsDefault
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.IsDefault) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> AddressTitle
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressTitle) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> AddressLine1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> AddressLine2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressLine2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.State) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> Zip
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Zip) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> Country
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Country) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTime>> DateAdded
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.DateAdded) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string TableName { get; set; }
                new global::System.Nullable<int> TableReference { get; set; }
                new global::System.Nullable<int> AddressType { get; set; }
                new global::System.Nullable<int> IsActive { get; set; }
                new global::System.Nullable<int> IsDefault { get; set; }
                new string AddressTitle { get; set; }
                new string AddressLine1 { get; set; }
                new string AddressLine2 { get; set; }
                new string City { get; set; }
                new string State { get; set; }
                new string Zip { get; set; }
                new string Country { get; set; }
                new global::System.Nullable<global::System.DateTime> DateAdded { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    TableName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "TableName",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableName_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableName_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableName_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableName_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableName_OnValueChanged);
                private static void _TableName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._TableName, sf);
                }
                private static bool _TableName_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.TableName_IsReadOnly(ref result);
                    return result;
                }
                private static void _TableName_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TableName_Validate(r);
                }
                private static string _TableName_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.TableName;
                }
                private static void _TableName_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TableName = v;
                }
                private static void _TableName_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.TableName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry
                    TableReference = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry(
                        "TableReference",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableReference_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableReference_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableReference_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableReference_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableReference_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._TableReference_OnValueChanged);
                private static void _TableReference_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._TableReference, sf);
                }
                private static bool _TableReference_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.TableReference_IsReadOnly(ref result);
                    return result;
                }
                private static void _TableReference_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TableReference_Validate(r);
                }
                private static global::System.Nullable<int> _TableReference_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.TableReference;
                }
                private static void _TableReference_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.TableReference = v;
                }
                private static void _TableReference_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.TableReference_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry
                    AddressType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry(
                        "AddressType",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_OnValueChanged);
                private static void _AddressType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressType, sf);
                }
                private static bool _AddressType_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.AddressType_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressType_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressType_Validate(r);
                }
                private static global::System.Nullable<int> _AddressType_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressType;
                }
                private static void _AddressType_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.AddressType = v;
                }
                private static void _AddressType_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.AddressType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry
                    IsActive = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsActive",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsActive_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsActive_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsActive_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsActive_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsActive_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsActive_OnValueChanged);
                private static void _IsActive_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._IsActive, sf);
                }
                private static bool _IsActive_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.IsActive_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsActive_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsActive_Validate(r);
                }
                private static global::System.Nullable<int> _IsActive_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.IsActive;
                }
                private static void _IsActive_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsActive = v;
                }
                private static void _IsActive_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.IsActive_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry
                    IsDefault = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Entry(
                        "IsDefault",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsDefault_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsDefault_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsDefault_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsDefault_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsDefault_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._IsDefault_OnValueChanged);
                private static void _IsDefault_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._IsDefault, sf);
                }
                private static bool _IsDefault_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.IsDefault_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsDefault_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsDefault_Validate(r);
                }
                private static global::System.Nullable<int> _IsDefault_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.IsDefault;
                }
                private static void _IsDefault_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.IsDefault = v;
                }
                private static void _IsDefault_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.IsDefault_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    AddressTitle = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "AddressTitle",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressTitle_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressTitle_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressTitle_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressTitle_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressTitle_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressTitle_OnValueChanged);
                private static void _AddressTitle_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressTitle, sf);
                }
                private static bool _AddressTitle_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.AddressTitle_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressTitle_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressTitle_Validate(r);
                }
                private static string _AddressTitle_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressTitle;
                }
                private static void _AddressTitle_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AddressTitle = v;
                }
                private static void _AddressTitle_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.AddressTitle_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    AddressLine1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "AddressLine1",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine1_OnValueChanged);
                private static void _AddressLine1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressLine1, sf);
                }
                private static bool _AddressLine1_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.AddressLine1_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressLine1_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressLine1_Validate(r);
                }
                private static string _AddressLine1_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressLine1;
                }
                private static void _AddressLine1_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AddressLine1 = v;
                }
                private static void _AddressLine1_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.AddressLine1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    AddressLine2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "AddressLine2",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressLine2_OnValueChanged);
                private static void _AddressLine2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressLine2, sf);
                }
                private static bool _AddressLine2_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.AddressLine2_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressLine2_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressLine2_Validate(r);
                }
                private static string _AddressLine2_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressLine2;
                }
                private static void _AddressLine2_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AddressLine2 = v;
                }
                private static void _AddressLine2_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.AddressLine2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    State = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "State",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_OnValueChanged);
                private static void _State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._State, sf);
                }
                private static bool _State_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.State_IsReadOnly(ref result);
                    return result;
                }
                private static void _State_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.State_Validate(r);
                }
                private static string _State_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.State;
                }
                private static void _State_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.State = v;
                }
                private static void _State_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.State_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    Zip = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "Zip",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Zip_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Zip_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Zip_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Zip_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Zip_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Zip_OnValueChanged);
                private static void _Zip_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Zip, sf);
                }
                private static bool _Zip_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Zip_IsReadOnly(ref result);
                    return result;
                }
                private static void _Zip_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Zip_Validate(r);
                }
                private static string _Zip_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Zip;
                }
                private static void _Zip_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Zip = v;
                }
                private static void _Zip_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Zip_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    Country = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "Country",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Country_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Country_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Country_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Country_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Country_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Country_OnValueChanged);
                private static void _Country_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Country, sf);
                }
                private static bool _Country_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Country_IsReadOnly(ref result);
                    return result;
                }
                private static void _Country_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Country_Validate(r);
                }
                private static string _Country_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Country;
                }
                private static void _Country_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Country = v;
                }
                private static void _Country_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Country_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateAdded = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateAdded",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DateAdded_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DateAdded_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DateAdded_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DateAdded_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DateAdded_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._DateAdded_OnValueChanged);
                private static void _DateAdded_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._DateAdded, sf);
                }
                private static bool _DateAdded_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.DateAdded_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateAdded_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateAdded_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateAdded_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.DateAdded;
                }
                private static void _DateAdded_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateAdded = global::LightSwitchApplication.Address.DetailsClass.TruncateDate(v);
                }
                private static void _DateAdded_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.DateAdded_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _TableName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data _TableReference;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data _AddressType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data _IsActive;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<int>>.Data _IsDefault;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _AddressTitle;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _AddressLine1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _AddressLine2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _Zip;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _Country;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateAdded;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
    public sealed partial class category : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the category entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public category()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public category(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.category> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.category.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int category_id
        {
            get
            {
                return global::LightSwitchApplication.category.DetailsClass.GetValue(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.category_id);
            }
            set
            {
                global::LightSwitchApplication.category.DetailsClass.SetValue(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.category_id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category_id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category_id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void category_id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string cname
        {
            get
            {
                return global::LightSwitchApplication.category.DetailsClass.GetValue(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.cname);
            }
            set
            {
                global::LightSwitchApplication.category.DetailsClass.SetValue(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.cname, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cname_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cname_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void cname_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> rep_id
        {
            get
            {
                return global::LightSwitchApplication.category.DetailsClass.GetValue(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.rep_id);
            }
            set
            {
                global::LightSwitchApplication.category.DetailsClass.SetValue(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.rep_id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rep_id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rep_id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void rep_id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.problem> problems
        {
            get
            {
                return global::LightSwitchApplication.category.DetailsClass.GetValue(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.problems);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.problem> problemsQuery
        {
            get
            {
                return global::LightSwitchApplication.category.DetailsClass.GetQuery(this, global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.problems);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.category,
                global::LightSwitchApplication.category.DetailsClass,
                global::LightSwitchApplication.category.DetailsClass.IImplementation,
                global::LightSwitchApplication.category.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.category_id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass>.Entry
                __categoryEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass>.Entry(
                    global::LightSwitchApplication.category.DetailsClass.__category_CreateNew,
                    global::LightSwitchApplication.category.DetailsClass.__category_Created,
                    global::LightSwitchApplication.category.DetailsClass.__category_AllowSaveWithErrors);
            private static global::LightSwitchApplication.category __category_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.category> es)
            {
                return new global::LightSwitchApplication.category(es);
            }
            private static void __category_Created(global::LightSwitchApplication.category e)
            {
                e.category_Created();
            }
            private static bool __category_AllowSaveWithErrors(global::LightSwitchApplication.category e)
            {
                bool result = false;
                e.category_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.category.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, int> category_id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.category_id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, string> cname
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.cname) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::System.Nullable<int>> rep_id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.rep_id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::LightSwitchApplication.problem> problems
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.problems) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::LightSwitchApplication.problem>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int category_id { get; set; }
                new string cname { get; set; }
                new global::System.Nullable<int> rep_id { get; set; }
                new global::System.Collections.IEnumerable problems { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "11.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, int>.Entry
                    category_id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, int>.Entry(
                        "category_id",
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._category_id_Stub,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._category_id_ComputeIsReadOnly,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._category_id_Validate,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._category_id_GetImplementationValue,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._category_id_SetImplementationValue,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._category_id_OnValueChanged);
                private static void _category_id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.category.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, int>.Data> c, global::LightSwitchApplication.category.DetailsClass d, object sf)
                {
                    c(d, ref d._category_id, sf);
                }
                private static bool _category_id_ComputeIsReadOnly(global::LightSwitchApplication.category e)
                {
                    bool result = false;
                    e.category_id_IsReadOnly(ref result);
                    return result;
                }
                private static void _category_id_Validate(global::LightSwitchApplication.category e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.category_id_Validate(r);
                }
                private static int _category_id_GetImplementationValue(global::LightSwitchApplication.category.DetailsClass d)
                {
                    return d.ImplementationEntity.category_id;
                }
                private static void _category_id_SetImplementationValue(global::LightSwitchApplication.category.DetailsClass d, int v)
                {
                    d.ImplementationEntity.category_id = v;
                }
                private static void _category_id_OnValueChanged(global::LightSwitchApplication.category e)
                {
                    e.category_id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, string>.Entry
                    cname = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, string>.Entry(
                        "cname",
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._cname_Stub,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._cname_ComputeIsReadOnly,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._cname_Validate,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._cname_GetImplementationValue,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._cname_SetImplementationValue,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._cname_OnValueChanged);
                private static void _cname_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.category.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, string>.Data> c, global::LightSwitchApplication.category.DetailsClass d, object sf)
                {
                    c(d, ref d._cname, sf);
                }
                private static bool _cname_ComputeIsReadOnly(global::LightSwitchApplication.category e)
                {
                    bool result = false;
                    e.cname_IsReadOnly(ref result);
                    return result;
                }
                private static void _cname_Validate(global::LightSwitchApplication.category e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.cname_Validate(r);
                }
                private static string _cname_GetImplementationValue(global::LightSwitchApplication.category.DetailsClass d)
                {
                    return d.ImplementationEntity.cname;
                }
                private static void _cname_SetImplementationValue(global::LightSwitchApplication.category.DetailsClass d, string v)
                {
                    d.ImplementationEntity.cname = v;
                }
                private static void _cname_OnValueChanged(global::LightSwitchApplication.category e)
                {
                    e.cname_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::System.Nullable<int>>.Entry
                    rep_id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::System.Nullable<int>>.Entry(
                        "rep_id",
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._rep_id_Stub,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._rep_id_ComputeIsReadOnly,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._rep_id_Validate,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._rep_id_GetImplementationValue,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._rep_id_SetImplementationValue,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._rep_id_OnValueChanged);
                private static void _rep_id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.category.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.category.DetailsClass d, object sf)
                {
                    c(d, ref d._rep_id, sf);
                }
                private static bool _rep_id_ComputeIsReadOnly(global::LightSwitchApplication.category e)
                {
                    bool result = false;
                    e.rep_id_IsReadOnly(ref result);
                    return result;
                }
                private static void _rep_id_Validate(global::LightSwitchApplication.category e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.rep_id_Validate(r);
                }
                private static global::System.Nullable<int> _rep_id_GetImplementationValue(global::LightSwitchApplication.category.DetailsClass d)
                {
                    return d.ImplementationEntity.rep_id;
                }
                private static void _rep_id_SetImplementationValue(global::LightSwitchApplication.category.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.rep_id = v;
                }
                private static void _rep_id_OnValueChanged(global::LightSwitchApplication.category e)
                {
                    e.rep_id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::LightSwitchApplication.problem>.Entry
                    problems = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::LightSwitchApplication.problem>.Entry(
                        "problems",
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._problems_Stub,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._problems_GetReferencedEntities,
                        global::LightSwitchApplication.category.DetailsClass.PropertySetProperties._problems_GetEntityCollection);
                private static void _problems_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.category.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::LightSwitchApplication.problem>.Data> c, global::LightSwitchApplication.category.DetailsClass d, object sf)
                {
                    c(d, ref d._problems, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.problem> _problems_GetReferencedEntities(global::LightSwitchApplication.category.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.problem, global::LightSwitchApplication.problem.DetailsClass>(global::LightSwitchApplication.category.DetailsClass.PropertySetProperties.problems, ref d._problems);
                }
                private static global::System.Collections.IEnumerable _problems_GetEntityCollection(global::LightSwitchApplication.category.DetailsClass d)
                {
                    return d.ImplementationEntity.problems;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, int>.Data _category_id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, string>.Data _cname;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::System.Nullable<int>>.Data _rep_id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.category, global::LightSwitchApplication.category.DetailsClass, global::LightSwitchApplication.problem>.Data _problems;
            
        }
    
        #endregion
    }
    
    #endregion
}
